# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/PyCampES/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-07-14 17:12-0300\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"X-Generator: Poedit 2.3.1\n"
"Last-Translator: Alvar Maciel <alvarmaciel@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language: es_AR\n"

#: ../Doc/library/turtle.rst:3
msgid ":mod:`turtle` --- Turtle graphics"
msgstr ":mod:`turtle` --- Gráficos con *Turtle*"

#: ../Doc/library/turtle.rst:10
msgid "**Source code:** :source:`Lib/turtle.py`"
msgstr "**Código fuente:** :source:`Lib/turtle.py`"

#: ../Doc/library/turtle.rst:20
msgid "Introduction"
msgstr "Introducción"

#: ../Doc/library/turtle.rst:22
msgid ""
"Turtle graphics is a popular way for introducing programming to kids.  It "
"was part of the original Logo programming language developed by Wally "
"Feurzeig, Seymour Papert and Cynthia Solomon in 1967."
msgstr ""
"Gráficas Turtle es una forma muy habitual de introducción a la programación "
"para niñas y niños. Era parte original del lenguaje de programación Logo, "
"desarrollado por Wally Feurzeig, Seymour Papert y Cynthia Solomon en 1967."

#: ../Doc/library/turtle.rst:26
msgid ""
"Imagine a robotic turtle starting at (0, 0) in the x-y plane.  After an "
"``import turtle``, give it the command ``turtle.forward(15)``, and it moves "
"(on-screen!) 15 pixels in the direction it is facing, drawing a line as it "
"moves.  Give it the command ``turtle.right(25)``, and it rotates in-place 25 "
"degrees clockwise."
msgstr ""
"Imagina una tortuga robot que empieza en las coordenadas (0, 0) en un plano "
"x-y. Después de un ``import turtle``, dele el comando ``turtle."
"forward(15)``, y se mueve (¡en la pantalla!) 15 pixeles en la dirección en "
"la que se encuentra, dibujando una línea mientras se mueve. Dele el comando "
"``turtle.right(25)``, y rotará en el lugar, 25 grados, en sentido horario."

#: ../Doc/library/turtle.rst:33
msgid ""
"Turtle can draw intricate shapes using programs that repeat simple moves."
msgstr ""
"Turtle puede dibujar figuras intrincadas usando programas que repiten "
"movimientos simples."

#: ../Doc/library/turtle.rst:41
msgid ""
"By combining together these and similar commands, intricate shapes and "
"pictures can easily be drawn."
msgstr ""
"Al combinar estos comandos y otros similares, se pueden dibujar figuras "
"intrincadas y formas."

#: ../Doc/library/turtle.rst:44
msgid ""
"The :mod:`turtle` module is an extended reimplementation of the same-named "
"module from the Python standard distribution up to version Python 2.5."
msgstr ""
"El módulo :mod:`turtle` es una reimplementación extendida del mismo módulo "
"de la distribución estándar Python hasta la versión 2.5."

#: ../Doc/library/turtle.rst:47
#, python-format
msgid ""
"It tries to keep the merits of the old turtle module and to be (nearly) "
"100% compatible with it.  This means in the first place to enable the "
"learning programmer to use all the commands, classes and methods "
"interactively when using the module from within IDLE run with the ``-n`` "
"switch."
msgstr ""
"Trata de mantener los méritos del viejo módulo y ser (casi) 100% compatible "
"con él. Esto implica en primer lugar, habilitar al programador que está "
"aprendiendo, el uso de todos los comandos, clases y métodos de forma "
"interactiva cuando usa el módulo desde el IDLE ejecutado con la opción ``-"
"n``."

#: ../Doc/library/turtle.rst:52
msgid ""
"The turtle module provides turtle graphics primitives, in both object-"
"oriented and procedure-oriented ways.  Because it uses :mod:`tkinter` for "
"the underlying graphics, it needs a version of Python installed with Tk "
"support."
msgstr ""
"El módulo turtle provee las primitivas gráficas, tanto en orientación "
"procedimental como orientada a objetos. Como usa el módulo :mod:`tkinter` "
"para las gráficas subyacentes, necesita tener instalada una versión de "
"Python con soporte TK."

#: ../Doc/library/turtle.rst:56
msgid "The object-oriented interface uses essentially two+two classes:"
msgstr "La interface orientada a objetos usa esencialmente clases dos+dos:"

#: ../Doc/library/turtle.rst:58
msgid ""
"The :class:`TurtleScreen` class defines graphics windows as a playground for "
"the drawing turtles.  Its constructor needs a :class:`tkinter.Canvas` or a :"
"class:`ScrolledCanvas` as argument.  It should be used when :mod:`turtle` is "
"used as part of some application."
msgstr ""
"La clase :class:`TurtleScreen` define una ventana gráfica como base para las "
"tortugas dibujantes. Su constructor necesita una clase :class:`tkinter."
"Canvas` o una a :class:`ScrolledCanvas` como argumento. Se debe usar cuando :"
"mod:`turtle` es usado como parte de una aplicación."

#: ../Doc/library/turtle.rst:63
msgid ""
"The function :func:`Screen` returns a singleton object of a :class:"
"`TurtleScreen` subclass. This function should be used when :mod:`turtle` is "
"used as a standalone tool for doing graphics. As a singleton object, "
"inheriting from its class is not possible."
msgstr ""
"La función :func:`Screen` devuelve un objeto *singleton* de la subclase :"
"class:`TurtleScreen`. Esta función debe utilizarse cuando :mod:`turtle` se "
"usa como una herramienta independiente para hacer gráficos. Siendo un objeto "
"*singleton*, no es posible que tenga herencias de su clase."

#: ../Doc/library/turtle.rst:68
msgid ""
"All methods of TurtleScreen/Screen also exist as functions, i.e. as part of "
"the procedure-oriented interface."
msgstr ""
"Todos los métodos de TurtleScreen/Screen también existen como funciones. Por "
"ejemplo. como parte de la interface orientada a procedimientos."

#: ../Doc/library/turtle.rst:71
msgid ""
":class:`RawTurtle` (alias: :class:`RawPen`) defines Turtle objects which "
"draw on a :class:`TurtleScreen`.  Its constructor needs a Canvas, "
"ScrolledCanvas or TurtleScreen as argument, so the RawTurtle objects know "
"where to draw."
msgstr ""
":class:`RawTurtle` (alias: :class:`RawPen`) Define los objetos Turtle con "
"los cuales dibujar con la clase :class:`TurtleScreen`. Su constructor "
"necesita como argumento un *Canvas, ScrolledCanvas o TurtleScreen*, así el "
"objeto *RawTurtle* sabe donde dibujar."

#: ../Doc/library/turtle.rst:75
msgid ""
"Derived from RawTurtle is the subclass :class:`Turtle` (alias: :class:"
"`Pen`), which draws on \"the\" :class:`Screen` instance which is "
"automatically created, if not already present."
msgstr ""
"Derivada de *RawTurtle* está la subclase :class:`Turtle` (alias: :class:"
"`Pen`), que dibuja en \"la\" instancia :class:`Screen` que se crea "
"automáticamente, si no está presente."

#: ../Doc/library/turtle.rst:79
msgid ""
"All methods of RawTurtle/Turtle also exist as functions, i.e. part of the "
"procedure-oriented interface."
msgstr ""
"Todos los métodos de *RawTurtle/Turtle* también existen como funciones. Por "
"ejemplo. como parte de la interface orientada a procedimientos."

#: ../Doc/library/turtle.rst:82
msgid ""
"The procedural interface provides functions which are derived from the "
"methods of the classes :class:`Screen` and :class:`Turtle`.  They have the "
"same names as the corresponding methods.  A screen object is automatically "
"created whenever a function derived from a Screen method is called.  An "
"(unnamed) turtle object is automatically created whenever any of the "
"functions derived from a Turtle method is called."
msgstr ""
"La interface procedimental provee funciones que son derivadas de los métodos "
"de las clases :class:`Screen` y :class:`Turtle`. Tienen los mismos nombres "
"que los métodos correspondientes. Un objeto *Screen* es creado "
"automáticamente cada vez que una función derivada de un método *Screen* es "
"llamado. Un objeto *Turtle* (innombrado) se crea automáticamente cada vez "
"que se llama a una función derivada de un método *Turtle*."

#: ../Doc/library/turtle.rst:89
msgid ""
"To use multiple turtles on a screen one has to use the object-oriented "
"interface."
msgstr ""
"Para usar varias tortugas en una pantalla se tiene que usar la interface "
"orientada a objetos."

#: ../Doc/library/turtle.rst:92
msgid ""
"In the following documentation the argument list for functions is given. "
"Methods, of course, have the additional first argument *self* which is "
"omitted here."
msgstr ""
"En la siguiente documentación se proporciona la listas de argumentos para "
"las funciones. Los métodos, por su puesto, tienen el argumento principal "
"adicional *self* que se omite aquí."

#: ../Doc/library/turtle.rst:98
msgid "Overview of available Turtle and Screen methods"
msgstr "Reseña de los métodos disponibles para *Turtle* y *Screen*"

#: ../Doc/library/turtle.rst:101
msgid "Turtle methods"
msgstr "Métodos *Turtle*"

#: ../Doc/library/turtle.rst:132 ../Doc/library/turtle.rst:242
msgid "Turtle motion"
msgstr "Movimiento de la tortuga"

#: ../Doc/library/turtle.rst:120
msgid "Move and draw"
msgstr "Mover y dibujar"

#: ../Doc/library/turtle.rst
msgid ":func:`forward` | :func:`fd`"
msgstr ":func:`forward` | :func:`fd`"

#: ../Doc/library/turtle.rst
msgid ":func:`backward` | :func:`bk` | :func:`back`"
msgstr ":func:`backward` | :func:`bk` | :func:`back`"

#: ../Doc/library/turtle.rst
msgid ":func:`right` | :func:`rt`"
msgstr ":func:`right` | :func:`rt`"

#: ../Doc/library/turtle.rst
msgid ":func:`left` | :func:`lt`"
msgstr ":func:`left` | :func:`lt`"

#: ../Doc/library/turtle.rst
msgid ":func:`goto` | :func:`setpos` | :func:`setposition`"
msgstr ":func:`goto` | :func:`setpos` | :func:`setposition`"

#: ../Doc/library/turtle.rst
msgid ":func:`setx`"
msgstr ":func:`setx`"

#: ../Doc/library/turtle.rst
msgid ":func:`sety`"
msgstr ":func:`sety`"

#: ../Doc/library/turtle.rst
msgid ":func:`setheading` | :func:`seth`"
msgstr ":func:`setheading` | :func:`seth`"

#: ../Doc/library/turtle.rst
msgid ":func:`home`"
msgstr ":func:`home`"

#: ../Doc/library/turtle.rst ../Doc/library/turtle.rst:2456
msgid ":func:`circle`"
msgstr ":func:`circle`"

#: ../Doc/library/turtle.rst
msgid ":func:`dot`"
msgstr ":func:`dot`"

#: ../Doc/library/turtle.rst ../Doc/library/turtle.rst:2434
msgid ":func:`stamp`"
msgstr ":func:`stamp`"

#: ../Doc/library/turtle.rst
msgid ":func:`clearstamp`"
msgstr ":func:`clearstamp`"

#: ../Doc/library/turtle.rst
msgid ":func:`clearstamps`"
msgstr ":func:`clearstamps`"

#: ../Doc/library/turtle.rst
msgid ":func:`undo`"
msgstr ":func:`undo`"

#: ../Doc/library/turtle.rst
msgid ":func:`speed`"
msgstr ":func:`speed`"

#: ../Doc/library/turtle.rst:128 ../Doc/library/turtle.rst:644
msgid "Tell Turtle's state"
msgstr "Mostrar el estado de la tortuga"

#: ../Doc/library/turtle.rst
msgid ":func:`position` | :func:`pos`"
msgstr ":func:`position` | :func:`pos`"

#: ../Doc/library/turtle.rst
msgid ":func:`towards`"
msgstr ":func:`towards`"

#: ../Doc/library/turtle.rst
msgid ":func:`xcor`"
msgstr ":func:`xcor`"

#: ../Doc/library/turtle.rst
msgid ":func:`ycor`"
msgstr ":func:`ycor`"

#: ../Doc/library/turtle.rst
msgid ":func:`heading`"
msgstr ":func:`heading`"

#: ../Doc/library/turtle.rst
msgid ":func:`distance`"
msgstr ":func:`distance`"

#: ../Doc/library/turtle.rst:132
msgid "Setting and measurement"
msgstr "Ajuste y unidades de medida"

#: ../Doc/library/turtle.rst
msgid ":func:`degrees`"
msgstr ":func:`degrees`"

#: ../Doc/library/turtle.rst
msgid ":func:`radians`"
msgstr ":func:`radians`"

#: ../Doc/library/turtle.rst:155 ../Doc/library/turtle.rst:795
msgid "Pen control"
msgstr "Control del lápiz"

#: ../Doc/library/turtle.rst:140 ../Doc/library/turtle.rst:798
msgid "Drawing state"
msgstr "Estado de dibujo"

#: ../Doc/library/turtle.rst
msgid ":func:`pendown` | :func:`pd` | :func:`down`"
msgstr ":func:`pendown` | :func:`pd` | :func:`down`"

#: ../Doc/library/turtle.rst
msgid ":func:`penup` | :func:`pu` | :func:`up`"
msgstr ":func:`penup` | :func:`pu` | :func:`up`"

#: ../Doc/library/turtle.rst
msgid ":func:`pensize` | :func:`width`"
msgstr ":func:`pensize` | :func:`width`"

#: ../Doc/library/turtle.rst
msgid ":func:`pen`"
msgstr ":func:`pen`"

#: ../Doc/library/turtle.rst
msgid ":func:`isdown`"
msgstr ":func:`isdown`"

#: ../Doc/library/turtle.rst:145 ../Doc/library/turtle.rst:890
msgid "Color control"
msgstr "Control del color"

#: ../Doc/library/turtle.rst
msgid ":func:`color`"
msgstr ":func:`color`"

#: ../Doc/library/turtle.rst
msgid ":func:`pencolor`"
msgstr ":func:`pencolor`"

#: ../Doc/library/turtle.rst
msgid ":func:`fillcolor`"
msgstr ":func:`fillcolor`"

#: ../Doc/library/turtle.rst:150 ../Doc/library/turtle.rst:1022
msgid "Filling"
msgstr "Relleno"

#: ../Doc/library/turtle.rst
msgid ":func:`filling`"
msgstr ":func:`filling`"

#: ../Doc/library/turtle.rst
msgid ":func:`begin_fill`"
msgstr ":func:`begin_fill`"

#: ../Doc/library/turtle.rst
msgid ":func:`end_fill`"
msgstr ":func:`end_fill`"

#: ../Doc/library/turtle.rst:155 ../Doc/library/turtle.rst:1069
msgid "More drawing control"
msgstr "Más controles de dibujo"

#: ../Doc/library/turtle.rst
msgid ":func:`reset`"
msgstr ":func:`reset`"

#: ../Doc/library/turtle.rst
msgid ":func:`clear`"
msgstr ":func:`clear`"

#: ../Doc/library/turtle.rst
msgid ":func:`write`"
msgstr ":func:`write`"

#: ../Doc/library/turtle.rst:172 ../Doc/library/turtle.rst:1115
msgid "Turtle state"
msgstr "Estado de la Tortuga"

#: ../Doc/library/turtle.rst:161 ../Doc/library/turtle.rst:1118
msgid "Visibility"
msgstr "Visibilidad"

#: ../Doc/library/turtle.rst
msgid ":func:`showturtle` | :func:`st`"
msgstr ":func:`showturtle` | :func:`st`"

#: ../Doc/library/turtle.rst
msgid ":func:`hideturtle` | :func:`ht`"
msgstr ":func:`hideturtle` | :func:`ht`"

#: ../Doc/library/turtle.rst
msgid ":func:`isvisible`"
msgstr ":func:`isvisible`"

#: ../Doc/library/turtle.rst:172 ../Doc/library/turtle.rst:1157
msgid "Appearance"
msgstr "Apariencia"

#: ../Doc/library/turtle.rst
msgid ":func:`shape`"
msgstr ":func:`shape`"

#: ../Doc/library/turtle.rst
msgid ":func:`resizemode`"
msgstr ":func:`resizemode`"

#: ../Doc/library/turtle.rst
msgid ":func:`shapesize` | :func:`turtlesize`"
msgstr ":func:`shapesize` | :func:`turtlesize`"

#: ../Doc/library/turtle.rst
msgid ":func:`shearfactor`"
msgstr ":func:`shearfactor`"

#: ../Doc/library/turtle.rst
msgid ":func:`settiltangle`"
msgstr ":func:`settiltangle`"

#: ../Doc/library/turtle.rst
msgid ":func:`tiltangle`"
msgstr ":func:`tiltangle`"

#: ../Doc/library/turtle.rst
msgid ":func:`tilt`"
msgstr ":func:`tilt`"

#: ../Doc/library/turtle.rst
msgid ":func:`shapetransform`"
msgstr ":func:`shapetransform`"

#: ../Doc/library/turtle.rst
msgid ":func:`get_shapepoly`"
msgstr ":func:`get_shapepoly`"

#: ../Doc/library/turtle.rst:177 ../Doc/library/turtle.rst:1362
msgid "Using events"
msgstr "Usando eventos"

#: ../Doc/library/turtle.rst ../Doc/library/turtle.rst:2428
msgid ":func:`onclick`"
msgstr ":func:`onclick`"

#: ../Doc/library/turtle.rst
msgid ":func:`onrelease`"
msgstr ":func:`onrelease`"

#: ../Doc/library/turtle.rst ../Doc/library/turtle.rst:2411
msgid ":func:`ondrag`"
msgstr ":func:`ondrag`"

#: ../Doc/library/turtle.rst:188 ../Doc/library/turtle.rst:1435
msgid "Special Turtle methods"
msgstr "Métodos especiales de *Turtle*"

#: ../Doc/library/turtle.rst
msgid ":func:`begin_poly`"
msgstr ":func:`begin_poly`"

#: ../Doc/library/turtle.rst
msgid ":func:`end_poly`"
msgstr ":func:`end_poly`"

#: ../Doc/library/turtle.rst
msgid ":func:`get_poly`"
msgstr ":func:`get_poly`"

#: ../Doc/library/turtle.rst ../Doc/library/turtle.rst:2447
msgid ":func:`clone`"
msgstr ":func:`clone`"

#: ../Doc/library/turtle.rst
msgid ":func:`getturtle` | :func:`getpen`"
msgstr ":func:`getturtle` | :func:`getpen`"

#: ../Doc/library/turtle.rst
msgid ":func:`getscreen`"
msgstr ":func:`getscreen`"

#: ../Doc/library/turtle.rst
msgid ":func:`setundobuffer`"
msgstr ":func:`setundobuffer`"

#: ../Doc/library/turtle.rst
msgid ":func:`undobufferentries`"
msgstr ":func:`undobufferentries`"

#: ../Doc/library/turtle.rst:191
msgid "Methods of TurtleScreen/Screen"
msgstr "Métodos de TurtleScreen/Screen"

#: ../Doc/library/turtle.rst:199 ../Doc/library/turtle.rst:1589
msgid "Window control"
msgstr "Control de ventana"

#: ../Doc/library/turtle.rst
msgid ":func:`bgcolor`"
msgstr ":func:`bgcolor`"

#: ../Doc/library/turtle.rst
msgid ":func:`bgpic`"
msgstr ":func:`bgpic`"

#: ../Doc/library/turtle.rst
msgid ":func:`clear` | :func:`clearscreen`"
msgstr ":func:`clear` | :func:`clearscreen`"

#: ../Doc/library/turtle.rst
msgid ":func:`reset` | :func:`resetscreen`"
msgstr ":func:`reset` | :func:`resetscreen`"

#: ../Doc/library/turtle.rst
msgid ":func:`screensize`"
msgstr ":func:`screensize`"

#: ../Doc/library/turtle.rst
msgid ":func:`setworldcoordinates`"
msgstr ":func:`setworldcoordinates`"

#: ../Doc/library/turtle.rst:204 ../Doc/library/turtle.rst:1706
msgid "Animation control"
msgstr "Control de animación"

#: ../Doc/library/turtle.rst
msgid ":func:`delay`"
msgstr ":func:`delay`"

#: ../Doc/library/turtle.rst
msgid ":func:`tracer`"
msgstr ":func:`tracer`"

#: ../Doc/library/turtle.rst
msgid ":func:`update`"
msgstr ":func:`update`"

#: ../Doc/library/turtle.rst:212 ../Doc/library/turtle.rst:1759
msgid "Using screen events"
msgstr "Usando eventos de pantalla"

#: ../Doc/library/turtle.rst
msgid ":func:`listen`"
msgstr ":func:`listen`"

#: ../Doc/library/turtle.rst
msgid ":func:`onkey` | :func:`onkeyrelease`"
msgstr ":func:`onkey` | :func:`onkeyrelease`"

#: ../Doc/library/turtle.rst
msgid ":func:`onkeypress`"
msgstr ":func:`onkeypress`"

#: ../Doc/library/turtle.rst
msgid ":func:`onclick` | :func:`onscreenclick`"
msgstr ":func:`onclick` | :func:`onscreenclick`"

#: ../Doc/library/turtle.rst
msgid ":func:`ontimer`"
msgstr ":func:`ontimer`"

#: ../Doc/library/turtle.rst
msgid ":func:`mainloop` | :func:`done`"
msgstr ":func:`mainloop` | :func:`done`"

#: ../Doc/library/turtle.rst:222 ../Doc/library/turtle.rst:1904
msgid "Settings and special methods"
msgstr "Configuración y métodos especiales"

#: ../Doc/library/turtle.rst
msgid ":func:`mode`"
msgstr ":func:`mode`"

#: ../Doc/library/turtle.rst
msgid ":func:`colormode`"
msgstr ":func:`colormode`"

#: ../Doc/library/turtle.rst
msgid ":func:`getcanvas`"
msgstr ":func:`getcanvas`"

#: ../Doc/library/turtle.rst
msgid ":func:`getshapes`"
msgstr ":func:`getshapes`"

#: ../Doc/library/turtle.rst
msgid ":func:`register_shape` | :func:`addshape`"
msgstr ":func:`register_shape` | :func:`addshape`"

#: ../Doc/library/turtle.rst
msgid ":func:`turtles`"
msgstr ":func:`turtles`"

#: ../Doc/library/turtle.rst
msgid ":func:`window_height`"
msgstr ":func:`window_height`"

#: ../Doc/library/turtle.rst
msgid ":func:`window_width`"
msgstr ":func:`window_width`"

#: ../Doc/library/turtle.rst:226 ../Doc/library/turtle.rst:1868
msgid "Input methods"
msgstr "Métodos de entrada"

#: ../Doc/library/turtle.rst
msgid ":func:`textinput`"
msgstr ":func:`textinput`"

#: ../Doc/library/turtle.rst
msgid ":func:`numinput`"
msgstr ":func:`numinput`"

#: ../Doc/library/turtle.rst:233
msgid "Methods specific to Screen"
msgstr "Métodos específicos para *Screen*"

#: ../Doc/library/turtle.rst
msgid ":func:`bye`"
msgstr ":func:`bye`"

#: ../Doc/library/turtle.rst
msgid ":func:`exitonclick`"
msgstr ":func:`exitonclick`"

#: ../Doc/library/turtle.rst
msgid ":func:`setup`"
msgstr ":func:`setup`"

#: ../Doc/library/turtle.rst
msgid ":func:`title`"
msgstr ":func:`title`"

#: ../Doc/library/turtle.rst:236
msgid "Methods of RawTurtle/Turtle and corresponding functions"
msgstr "Métodos de *RawTurtle/Turtle* Y sus correspondientes funciones"

#: ../Doc/library/turtle.rst:238
msgid ""
"Most of the examples in this section refer to a Turtle instance called "
"``turtle``."
msgstr ""
"Casi todos los ejemplos de esta sección se refieren a una instancia Turtle "
"llamada ``turtle``."

#: ../Doc/library/turtle.rst
msgid "Parameters"
msgstr "Parámetros"

#: ../Doc/library/turtle.rst:247 ../Doc/library/turtle.rst:292
#: ../Doc/library/turtle.rst:317 ../Doc/library/turtle.rst:377
#: ../Doc/library/turtle.rst:400 ../Doc/library/turtle.rst:423
msgid "a number (integer or float)"
msgstr "un número (entero o flotante)"

#: ../Doc/library/turtle.rst:249
msgid ""
"Move the turtle forward by the specified *distance*, in the direction the "
"turtle is headed."
msgstr ""
"Mover hacia adelante la la tortuga la *ditancia* especificada, en la "
"dirección en la que la tortuga apunta."

#: ../Doc/library/turtle.rst:269 ../Doc/library/turtle.rst:473
#: ../Doc/library/turtle.rst:748 ../Doc/library/turtle.rst:1256
#: ../Doc/library/turtle.rst:1275
msgid "a number"
msgstr "un número"

#: ../Doc/library/turtle.rst:271
msgid ""
"Move the turtle backward by *distance*, opposite to the direction the turtle "
"is headed.  Do not change the turtle's heading."
msgstr ""
"Mover hacia atrás la tortuga la *distance* especificada, opuesta a la "
"dirección en que la tortuga apunta. No cambia la dirección de la tortuga."

#: ../Doc/library/turtle.rst:294
msgid ""
"Turn turtle right by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Gira la tortuga a la derecha tomando los *angle* como unidad de medida. (La "
"unidad de medida por defecto son los grado, pero se puede configurar a "
"través de las funciones :func:`degrees` y :func:`radians`.) La orientación "
"de los ángulos depende del modo en que está la tortuga, ver :func:`mode`."

#: ../Doc/library/turtle.rst:319
msgid ""
"Turn turtle left by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Gira la tortuga a la izquierda tomando los *ángulos* como unidad de medida. "
"(La unidad de medida por defecto son los grado, pero se puede configurar a "
"través de las funciones :func:`degrees` y :func:`radians`.) La orientación "
"de los ángulos depende del modo en que está la tortuga, ver :func:`mode`."

#: ../Doc/library/turtle.rst:343
msgid "a number or a pair/vector of numbers"
msgstr "un número o un par/vector de números"

#: ../Doc/library/turtle.rst:344
msgid "a number or ``None``"
msgstr "un número o ` None``"

#: ../Doc/library/turtle.rst:346
msgid ""
"If *y* is ``None``, *x* must be a pair of coordinates or a :class:`Vec2D` (e."
"g. as returned by :func:`pos`)."
msgstr ""
"Si *y* es ``None``, *x* debe ser un par de coordenadas o un :class:`Vec2D` "
"(ejemplo: según lo devuelto por :func:`pos`)."

#: ../Doc/library/turtle.rst:349
msgid ""
"Move turtle to an absolute position.  If the pen is down, draw line.  Do not "
"change the turtle's orientation."
msgstr ""
"Mueve la tortuga a una posición absoluta. Si el lápiz está bajo, traza una "
"linea. No cambia la orientación de la tortuga."

#: ../Doc/library/turtle.rst:379
msgid ""
"Set the turtle's first coordinate to *x*, leave second coordinate unchanged."
msgstr ""
"Establece la primera coordenada de la tortuga a *x*, deja la segunda "
"coordenada sin cambios."

#: ../Doc/library/turtle.rst:402
msgid ""
"Set the turtle's second coordinate to *y*, leave first coordinate unchanged."
msgstr ""
"Establece la segunda coordenada de la tortuga a *y*, deja la primera "
"coordenada sin cambios."

#: ../Doc/library/turtle.rst:425
msgid ""
"Set the orientation of the turtle to *to_angle*.  Here are some common "
"directions in degrees:"
msgstr ""
"Establece la orientación de la tortuga a *to_angle*. Aquí hay algunas "
"direcciones comunes en grados:"

#: ../Doc/library/turtle.rst:429
msgid "standard mode"
msgstr "modo estándar"

#: ../Doc/library/turtle.rst:429
msgid "logo mode"
msgstr "modo logo"

#: ../Doc/library/turtle.rst:431
msgid "0 - east"
msgstr "0 - este"

#: ../Doc/library/turtle.rst:431
msgid "0 - north"
msgstr "0 - norte"

#: ../Doc/library/turtle.rst:432
msgid "90 - north"
msgstr "90 - norte"

#: ../Doc/library/turtle.rst:432
msgid "90 - east"
msgstr "90 - este"

#: ../Doc/library/turtle.rst:433
msgid "180 - west"
msgstr "180 - oeste"

#: ../Doc/library/turtle.rst:433
msgid "180 - south"
msgstr "180 - sur"

#: ../Doc/library/turtle.rst:434
msgid "270 - south"
msgstr "270 - sur"

#: ../Doc/library/turtle.rst:434
msgid "270 - west"
msgstr "270 - oeste"

#: ../Doc/library/turtle.rst:447
msgid ""
"Move turtle to the origin -- coordinates (0,0) -- and set its heading to its "
"start-orientation (which depends on the mode, see :func:`mode`)."
msgstr ""
"Mueve la tortuga al origen -- coordenadas (0,0) -- y establece la "
"orientación a la orientación original (que depende del modo, ver :func:"
"`mode`)."

#: ../Doc/library/turtle.rst:474
msgid "a number (or ``None``)"
msgstr "un número (o ``None``)"

#: ../Doc/library/turtle.rst:475 ../Doc/library/turtle.rst:569
msgid "an integer (or ``None``)"
msgstr "un entero (o ``None``)"

#: ../Doc/library/turtle.rst:477
msgid ""
"Draw a circle with given *radius*.  The center is *radius* units left of the "
"turtle; *extent* -- an angle -- determines which part of the circle is "
"drawn.  If *extent* is not given, draw the entire circle.  If *extent* is "
"not a full circle, one endpoint of the arc is the current pen position.  "
"Draw the arc in counterclockwise direction if *radius* is positive, "
"otherwise in clockwise direction.  Finally the direction of the turtle is "
"changed by the amount of *extent*."
msgstr ""
"Dibuja un círculo con el *radius* (radio) dado. El centro es *radius* "
"unidades a la izquierda de la tortuga; *extent* -- un ángulo -- determina "
"que parte del círculo se dibuja. Si no se pasa *extent*, dibuja el círculo "
"entero. Si *extent* no es un círculo completo, un punto final del arco es la "
"posición actual de lápiz. Dibuja el arco en dirección antihorario si "
"*radius* es positivo, si no en dirección horaria. Finalmente la dirección de "
"la tortuga es modificada por el aumento de *extent*."

#: ../Doc/library/turtle.rst:485
msgid ""
"As the circle is approximated by an inscribed regular polygon, *steps* "
"determines the number of steps to use.  If not given, it will be calculated "
"automatically.  May be used to draw regular polygons."
msgstr ""
"Como el círculo se aproxima a un polígono regular inscripto, *steps* "
"determina el número de pasos a usar. SI no se da, será calculado "
"automáticamente. Puede ser usado para dibujar polígonos regulares."

#: ../Doc/library/turtle.rst:511
msgid "an integer >= 1 (if given)"
msgstr "un entero >= 1 (si se da)"

#: ../Doc/library/turtle.rst:512
msgid "a colorstring or a numeric color tuple"
msgstr "un *colorstring* o una tupla numérica de color"

#: ../Doc/library/turtle.rst:514
msgid ""
"Draw a circular dot with diameter *size*, using *color*.  If *size* is not "
"given, the maximum of pensize+4 and 2*pensize is used."
msgstr ""
"Dibuja un punto circular con diámetro *size*, usando *color*. Si *size* no "
"se da, el máximo de pensize+4 y 2*pensize es usado."

#: ../Doc/library/turtle.rst:532
msgid ""
"Stamp a copy of the turtle shape onto the canvas at the current turtle "
"position.  Return a stamp_id for that stamp, which can be used to delete it "
"by calling ``clearstamp(stamp_id)``."
msgstr ""
"Estampa una copia de la forma de la tortuga en el lienzo en la posición "
"actual. Devuelve un stamp_id por cada estampa, que puede ser usado para "
"borrarlo al llamar ``clearstamp(stamp_id)``."

#: ../Doc/library/turtle.rst:547
msgid "an integer, must be return value of previous :func:`stamp` call"
msgstr ""
"un entero, debe devolver el valor de la llamada previa de la función :func:"
"`stamp` call"

#: ../Doc/library/turtle.rst:550
msgid "Delete stamp with given *stampid*."
msgstr "Borra la estampa con el *stampid* dado."

#: ../Doc/library/turtle.rst:571
msgid ""
"Delete all or first/last *n* of turtle's stamps.  If *n* is ``None``, delete "
"all stamps, if *n* > 0 delete first *n* stamps, else if *n* < 0 delete last "
"*n* stamps."
msgstr ""
"Borra todas o las primeros/últimos *n* estampas de la tortuga. Si *n* es "
"``None`` , borra todas las estampas, Si *n* *> 0* borra la primera estampa "
"*n*, sino y *n* *< 0* borra la última estampa *n*."

#: ../Doc/library/turtle.rst:594
msgid ""
"Undo (repeatedly) the last turtle action(s).  Number of available undo "
"actions is determined by the size of the undobuffer."
msgstr ""
"Deshace (repetidamente) la(s) última(s) acción(es) de la tortuga. El número "
"de acciones a deshacer es determinado por el tamaño del *undobuffer*."

#: ../Doc/library/turtle.rst:609
msgid "an integer in the range 0..10 or a speedstring (see below)"
msgstr "un entero en el rango 0..10 o un *speedstring* (ver abajo)"

#: ../Doc/library/turtle.rst:611
msgid ""
"Set the turtle's speed to an integer value in the range 0..10.  If no "
"argument is given, return current speed."
msgstr ""
"Establecer la velocidad de la tortuga a un valor entero en el rango 0..10. "
"Si no se pasa ningún argumento, vuelve a la velocidad actual."

#: ../Doc/library/turtle.rst:614
msgid ""
"If input is a number greater than 10 or smaller than 0.5, speed is set to "
"0.  Speedstrings are mapped to speedvalues as follows:"
msgstr ""
"Si el parámetro de entrada es un número mayor que 10 o menor que 0.5, la "
"velocidad se establece a 0. La frase acerca de la velocidad es mapeada a "
"valores de velocidad de la siguiente manera:"

#: ../Doc/library/turtle.rst:617
msgid "\"fastest\":  0"
msgstr "\"fastest\":  0"

#: ../Doc/library/turtle.rst:618
msgid "\"fast\":  10"
msgstr "\"fast\":  10"

#: ../Doc/library/turtle.rst:619
msgid "\"normal\":  6"
msgstr "\"normal\":  6"

#: ../Doc/library/turtle.rst:620
msgid "\"slow\":  3"
msgstr "\"slow\":  3"

#: ../Doc/library/turtle.rst:621
msgid "\"slowest\":  1"
msgstr "\"slowest\":  1"

#: ../Doc/library/turtle.rst:623
msgid ""
"Speeds from 1 to 10 enforce increasingly faster animation of line drawing "
"and turtle turning."
msgstr ""
"Velocidades de 1 a 10 generan una animación cada vez más rápida al dibujar "
"las líneas y en el giro de la tortuga."

#: ../Doc/library/turtle.rst:626
msgid ""
"Attention: *speed* = 0 means that *no* animation takes place. forward/back "
"makes turtle jump and likewise left/right make the turtle turn instantly."
msgstr ""
"Atención: *speed* = 0 implica que *no* habrá ninguna animación. Los métodos "
"*fordward/back* harán que la tortuga salte, de la misma manera que *left/"
"right* hará que la tortuga gire instantáneamente."

#: ../Doc/library/turtle.rst:649
msgid ""
"Return the turtle's current location (x,y) (as a :class:`Vec2D` vector)."
msgstr ""
"Devuelve la posición actual de la tortuga (x,y) (como un vector :class:"
"`Vec2D`)"

#: ../Doc/library/turtle.rst:660 ../Doc/library/turtle.rst:723
msgid "a number or a pair/vector of numbers or a turtle instance"
msgstr "un número o par de vectores numéricos o una instancia de la tortuga"

#: ../Doc/library/turtle.rst:661 ../Doc/library/turtle.rst:724
msgid "a number if *x* is a number, else ``None``"
msgstr "un número si *x* es un número, si no ``None``"

#: ../Doc/library/turtle.rst:663
msgid ""
"Return the angle between the line from turtle position to position specified "
"by (x,y), the vector or the other turtle.  This depends on the turtle's "
"start orientation which depends on the mode - \"standard\"/\"world\" or "
"\"logo\")."
msgstr ""
"Devuelve el ángulo entre la línea en la posición de la tortuga a la posición "
"especificada en (x, y), el vector o la otra tortuga. Esto depende de la "
"posición inicial de la tortuga, que depende del modo - \"standard\"/\"world"
"\" o \"logo\")."

#: ../Doc/library/turtle.rst:677
msgid "Return the turtle's x coordinate."
msgstr "Devuelve la coordinada *x* de la tortuga."

#: ../Doc/library/turtle.rst:693
msgid "Return the turtle's y coordinate."
msgstr "Devuelve la coordenada *y* de la tortuga."

#: ../Doc/library/turtle.rst:709
msgid ""
"Return the turtle's current heading (value depends on the turtle mode, see :"
"func:`mode`)."
msgstr ""
"Devuelve la orientación actual de la tortuga (el valor depende del modo de "
"la tortuga, ver :func:`mode`)."

#: ../Doc/library/turtle.rst:726
msgid ""
"Return the distance from the turtle to (x,y), the given vector, or the given "
"other turtle, in turtle step units."
msgstr ""
"Devuelve la distancia desde la tortuga al vector (x,y) dado, otra instancia "
"de la tortuga, el valor es unidad pasos de tortuga."

#: ../Doc/library/turtle.rst:744
msgid "Settings for measurement"
msgstr "Configuración de las medidas"

#: ../Doc/library/turtle.rst:750
msgid ""
"Set angle measurement units, i.e. set number of \"degrees\" for a full "
"circle. Default value is 360 degrees."
msgstr ""
"Establece la unidad de medida del ángulo, por ejemplo establece el número de "
"\"grados\" para un círculo completo. El valor por defecto es 36 grados."

#: ../Doc/library/turtle.rst:773
msgid ""
"Set the angle measurement units to radians.  Equivalent to ``degrees(2*math."
"pi)``."
msgstr ""
"Establece la unidad de medida del ángulo a radianes. Equivalente a "
"``degrees(2*math.pi)``."

#: ../Doc/library/turtle.rst:804
msgid "Pull the pen down -- drawing when moving."
msgstr "Baja el lápiz -- dibuja mientras se mueve."

#: ../Doc/library/turtle.rst:811
msgid "Pull the pen up -- no drawing when moving."
msgstr "Sube el lápiz -- no dibuja mientras se mueve."

#: ../Doc/library/turtle.rst:817
msgid "a positive number"
msgstr "un número positivo"

#: ../Doc/library/turtle.rst:819
msgid ""
"Set the line thickness to *width* or return it.  If resizemode is set to "
"\"auto\" and turtleshape is a polygon, that polygon is drawn with the same "
"line thickness.  If no argument is given, the current pensize is returned."
msgstr ""
"Establece el grosos de la línea a *width* o lo devuelve. Si resizemode se "
"establece a \"auto\" y turtleshape es un polígono, ese polígono es dibujado "
"con el mismo grosor de línea. Si no se dan argumentos, devuelve el grosor "
"del lápiz actual."

#: ../Doc/library/turtle.rst:833
msgid "a dictionary with some or all of the below listed keys"
msgstr "un diccionario con algunos o todos las claves listadas debajo"

#: ../Doc/library/turtle.rst:834
msgid "one or more keyword-arguments with the below listed keys as keywords"
msgstr ""
"uno o más argumentos-palabras claves con las claves listadas debajo como "
"palabras claves"

#: ../Doc/library/turtle.rst:836
msgid ""
"Return or set the pen's attributes in a \"pen-dictionary\" with the "
"following key/value pairs:"
msgstr ""
"Devuelve o establece los atributos del lápiz en un \"diccionario-lápiz\" con "
"el siguiente para de valores/claves:"

#: ../Doc/library/turtle.rst:839
msgid "\"shown\": True/False"
msgstr "\"shown\": True/False"

#: ../Doc/library/turtle.rst:840
msgid "\"pendown\": True/False"
msgstr "\"pendown\": True/False"

#: ../Doc/library/turtle.rst:841
msgid "\"pencolor\": color-string or color-tuple"
msgstr "\"pencolor\": color-string or color-tuple"

#: ../Doc/library/turtle.rst:842
msgid "\"fillcolor\": color-string or color-tuple"
msgstr "\"fillcolor\": color-string or color-tuple"

#: ../Doc/library/turtle.rst:843
msgid "\"pensize\": positive number"
msgstr "\"pensize\": número positivo"

#: ../Doc/library/turtle.rst:844
msgid "\"speed\": number in range 0..10"
msgstr "\"speed\": número en rango 0..10"

#: ../Doc/library/turtle.rst:845
msgid "\"resizemode\": \"auto\" or \"user\" or \"noresize\""
msgstr "\"resizemode\": \"auto\" or \"user\" or \"noresize\""

#: ../Doc/library/turtle.rst:846
msgid "\"stretchfactor\": (positive number, positive number)"
msgstr "\"stretchfactor\": (número positivo, número positivo)"

#: ../Doc/library/turtle.rst:847
msgid "\"outline\": positive number"
msgstr "\"outline\": número positivo"

#: ../Doc/library/turtle.rst:848
msgid "\"tilt\": number"
msgstr "\"tilt\": número"

#: ../Doc/library/turtle.rst:850
msgid ""
"This dictionary can be used as argument for a subsequent call to :func:`pen` "
"to restore the former pen-state.  Moreover one or more of these attributes "
"can be provided as keyword-arguments.  This can be used to set several pen "
"attributes in one statement."
msgstr ""
"Este diccionario puede usarse como argumento de una llamada subsecuente a la "
"función :func:`pen` para restaurar el estado anterior del lápiz. Más aún, "
"uno o más de estos atributos pueden darse como argumentos  claves. Esto "
"puede usarse para establecer diferentes atributos del lápiz en una sola "
"definición."

#: ../Doc/library/turtle.rst:876
msgid "Return ``True`` if pen is down, ``False`` if it's up."
msgstr "Devuelve ``True``si el lápiz está abajo, si está arriba ``False``."

#: ../Doc/library/turtle.rst:894
msgid "Return or set the pencolor."
msgstr "Devuelve o establece el color del lápiz."

#: ../Doc/library/turtle.rst:896 ../Doc/library/turtle.rst:945
msgid "Four input formats are allowed:"
msgstr "Se permiten cuatro formatos de entrada:"

#: ../Doc/library/turtle.rst:901
msgid "``pencolor()``"
msgstr "``pencolor()``"

#: ../Doc/library/turtle.rst:899
msgid ""
"Return the current pencolor as color specification string or as a tuple (see "
"example).  May be used as input to another color/pencolor/fillcolor call."
msgstr ""
"Devuelve el color del lápiz actual como una palabra específica de algún "
"color o como una tupla (ver ejemplo). Puede ser usado como una entrada para "
"otra llamada de *color/pencolor/fillcolor*."

#: ../Doc/library/turtle.rst:905
msgid "``pencolor(colorstring)``"
msgstr "``pencolor(colorstring)``"

#: ../Doc/library/turtle.rst:904
msgid ""
"Set pencolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"Establece el color del lápiz a *colorstring*, que es una palabra que "
"especifica un color *Tk*, tales como ``\"red\"``, ``\"yellow\"``, o ``"
"\"#33cc8c\"``."

#: ../Doc/library/turtle.rst:910
msgid "``pencolor((r, g, b))``"
msgstr "``pencolor((r, g, b))``"

#: ../Doc/library/turtle.rst:908
msgid ""
"Set pencolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"Establece el color del lápiz representado como una tupla de *r*, *g*, y "
"*b*.  Cada valor *r*, *g*, y *b* debe ser un valor entero en el rango 0.."
"colormode, donde colormode es 1.0 o 255 (ver :func:`colormode`)."

#: ../Doc/library/turtle.rst:917
msgid "``pencolor(r, g, b)``"
msgstr "``pencolor(r, g, b)``"

#: ../Doc/library/turtle.rst:913
msgid ""
"Set pencolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"Establece el color del lápiz al color RGB representado por *r*, *g*, y *b*. "
"Cada valor *r*, *g*, y *b* debe estar en el rango 0..colormode."

#: ../Doc/library/turtle.rst:916
msgid ""
"If turtleshape is a polygon, the outline of that polygon is drawn with the "
"newly set pencolor."
msgstr ""
"Si *turtleshape* es un polígono, la línea del polígono es dibujado con el "
"muevo color de lápiz elegido."

#: ../Doc/library/turtle.rst:943
msgid "Return or set the fillcolor."
msgstr "Return or set the fillcolor."

#: ../Doc/library/turtle.rst:950
msgid "``fillcolor()``"
msgstr "``fillcolor()``"

#: ../Doc/library/turtle.rst:948
msgid ""
"Return the current fillcolor as color specification string, possibly in "
"tuple format (see example).  May be used as input to another color/pencolor/"
"fillcolor call."
msgstr ""
"Devuelve el valor actual de *fillcolor* como una palabra, posiblemente en "
"formato de tupla (ver ejemplo). Puede ser usado como entrada de otra llamada "
"*color/pencolor/fillcolor*."

#: ../Doc/library/turtle.rst:954
msgid "``fillcolor(colorstring)``"
msgstr "``fillcolor(colorstring)``"

#: ../Doc/library/turtle.rst:953
msgid ""
"Set fillcolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"Establece *fillcolor* a *colorstring*, que es un color TK especificado como "
"una palabra (en inglés), tales como *\"red\"*, *\"yellow\"*, o `\"#33cc8c"
"\"``."

#: ../Doc/library/turtle.rst:959
msgid "``fillcolor((r, g, b))``"
msgstr "``fillcolor((r, g, b))``"

#: ../Doc/library/turtle.rst:957
msgid ""
"Set fillcolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"Establece *fillcolor* al color RGB representado por la tupla *r*, *g*, y "
"*b*. Cada uno de los valores *r*, *g*, y *b* debe estar en el rango 0.."
"colormode, donde *colormode* es 1.0 o 255 (ver :func:`colormode`)."

#: ../Doc/library/turtle.rst:966
msgid "``fillcolor(r, g, b)``"
msgstr "``fillcolor(r, g, b)``"

#: ../Doc/library/turtle.rst:962
msgid ""
"Set fillcolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"Establece *fillcolor* al color RGB representado por *r*, *g*, y *b*. Cada "
"uno de los valores *r*, *g* y *b* debe ser un valor en el rango 0..colormode."

#: ../Doc/library/turtle.rst:965
msgid ""
"If turtleshape is a polygon, the interior of that polygon is drawn with the "
"newly set fillcolor."
msgstr ""
"Si *turtleshape* es un polígono, el interior de ese polígono es dibujado con "
"el color establecido en *fillcolor*."

#: ../Doc/library/turtle.rst:986
msgid "Return or set pencolor and fillcolor."
msgstr "Devuelve o establece el color del lápiz y el color de relleno."

#: ../Doc/library/turtle.rst:988
msgid ""
"Several input formats are allowed.  They use 0 to 3 arguments as follows:"
msgstr ""
"Se permiten varios formatos de entrada. Usan de 0 a 3 argumentos como se "
"muestra a continuación:"

#: ../Doc/library/turtle.rst:994
msgid "``color()``"
msgstr "``color()``"

#: ../Doc/library/turtle.rst:992
msgid ""
"Return the current pencolor and the current fillcolor as a pair of color "
"specification strings or tuples as returned by :func:`pencolor` and :func:"
"`fillcolor`."
msgstr ""
"Devuelve el valor actual de *pencolor* y el valor actual de *fillcolor* como "
"un par de colores especificados como palabras o tuplas, como devuelven las "
"funciones :func:`pencolor` y :func:`fillcolor`."

#: ../Doc/library/turtle.rst:998
msgid "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"
msgstr "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"

#: ../Doc/library/turtle.rst:997
msgid ""
"Inputs as in :func:`pencolor`, set both, fillcolor and pencolor, to the "
"given value."
msgstr ""
"Entradas como en  :func:`pencolor`, establece al valor dado tanto, "
"*fillcolor* como *pencolor*."

#: ../Doc/library/turtle.rst:1005
msgid ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"
msgstr ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"

#: ../Doc/library/turtle.rst:1001
msgid ""
"Equivalent to ``pencolor(colorstring1)`` and ``fillcolor(colorstring2)`` and "
"analogously if the other input format is used."
msgstr ""
"Equivalente a ``pencolor(colorstring1)`` y ``fillcolor(colorstring2)`` y "
"análogamente si se usa el otro formato de entrada."

#: ../Doc/library/turtle.rst:1004
msgid ""
"If turtleshape is a polygon, outline and interior of that polygon is drawn "
"with the newly set colors."
msgstr ""
"Si *turtleshape* es un polígono, la línea y el interior de ese polígono e "
"dibujado con los nuevos colores que se establecieron."

#: ../Doc/library/turtle.rst:1018
msgid "See also: Screen method :func:`colormode`."
msgstr "Ver también: Método *Screeen* :func:`colormode`."

#: ../Doc/library/turtle.rst:1032
msgid "Return fillstate (``True`` if filling, ``False`` else)."
msgstr "Devuelve *fillstate* (``True`` si está lleno, sino``False``)."

#: ../Doc/library/turtle.rst:1047
msgid "To be called just before drawing a shape to be filled."
msgstr "Para ser llamada justo antes de dibujar una forma a rellenar."

#: ../Doc/library/turtle.rst:1052
msgid "Fill the shape drawn after the last call to :func:`begin_fill`."
msgstr ""
"Rellena la forma dibujada después de última llamada a la función :func:"
"`begin_fill`."

#: ../Doc/library/turtle.rst:1054
msgid ""
"Whether or not overlap regions for self-intersecting polygons or multiple "
"shapes are filled depends on the operating system graphics, type of overlap, "
"and number of overlaps.  For example, the Turtle star above may be either "
"all yellow or have some white regions."
msgstr ""
"Superponer o no, regiones de polígonos auto-intersectados o múltiples "
"formas, estas son rellenadas dependiendo de los gráficos del sistema "
"operativo, tipo de superposición y número de superposiciones. Por ejemplo, "
"la flecha de la tortuga de arriba, puede ser toda amarilla o tener algunas "
"regiones blancas."

#: ../Doc/library/turtle.rst:1073
msgid ""
"Delete the turtle's drawings from the screen, re-center the turtle and set "
"variables to the default values."
msgstr ""
"Borra el dibujo de la tortuga de la pantalla, centra la tortuga y establece "
"las variables a los valores por defecto."

#: ../Doc/library/turtle.rst:1094
msgid ""
"Delete the turtle's drawings from the screen.  Do not move turtle.  State "
"and position of the turtle as well as drawings of other turtles are not "
"affected."
msgstr ""
"Borra el dibujo de la tortuga de la pantalla. No mueve la tortuga. El estado "
"y posición de la tortuga así como los todos los dibujos de las otras "
"tortugas no son afectados."

#: ../Doc/library/turtle.rst:1100
msgid "object to be written to the TurtleScreen"
msgstr "objeto que se escribirá en la pantalla de la tortuga"

#: ../Doc/library/turtle.rst:1101
msgid "True/False"
msgstr "True/False"

#: ../Doc/library/turtle.rst:1102
msgid "one of the strings \"left\", \"center\" or right\""
msgstr "una de las frases *\"left*, *center* o *right\"*"

#: ../Doc/library/turtle.rst:1103
msgid "a triple (fontname, fontsize, fonttype)"
msgstr "un trió (nombre de fuente, tamaño de fuente, tipo de fuente)"

#: ../Doc/library/turtle.rst:1105
msgid ""
"Write text - the string representation of *arg* - at the current turtle "
"position according to *align* (\"left\", \"center\" or right\") and with the "
"given font.  If *move* is true, the pen is moved to the bottom-right corner "
"of the text.  By default, *move* is ``False``."
msgstr ""
"Escribe un texto  la representación de la cadena de caracteres de *arg*  en "
"la posición actual de la tortuga de acuerdo a el alineamiento *align* "
"(\"*left*\", \"*center*\" o \"*right*\") y con la fuente que se estableció. "
"Si *move* es verdadero, el lápiz se mueve a la esquina inferior derecha del "
"texto. Por defecto, *move* es ``False``."

#: ../Doc/library/turtle.rst:1123
msgid ""
"Make the turtle invisible.  It's a good idea to do this while you're in the "
"middle of doing some complex drawing, because hiding the turtle speeds up "
"the drawing observably."
msgstr ""
"Hace invisible a la tortuga, Es una buena idea hacer eso mientras está "
"haciendo dibujos complejos, ya que esconder a la tortuga acelera dibujo de "
"manera observable."

#: ../Doc/library/turtle.rst:1136
msgid "Make the turtle visible."
msgstr "Hace visible la tortuga."

#: ../Doc/library/turtle.rst:1146
msgid "Return ``True`` if the Turtle is shown, ``False`` if it's hidden."
msgstr "Devuelve ``True`` si la tortuga se muestra, ``False`` si está oculta."

#: ../Doc/library/turtle.rst:1161
msgid "a string which is a valid shapename"
msgstr "una cadena de caracteres que es un nombre de forma valido"

#: ../Doc/library/turtle.rst:1163
msgid ""
"Set turtle shape to shape with given *name* or, if name is not given, return "
"name of current shape.  Shape with *name* must exist in the TurtleScreen's "
"shape dictionary.  Initially there are the following polygon shapes: \"arrow"
"\", \"turtle\", \"circle\", \"square\", \"triangle\", \"classic\".  To learn "
"about how to deal with shapes see Screen method :func:`register_shape`."
msgstr ""
"Establece la forma de la tortuga al *name\" que se establece o, si no se "
"establece un nmbre, devuelve el nombre actual de su forma. La forma *name* "
"debe existir en el diccionario de formas de *TurtleScreen*. Inicialmente "
"están las siguientes formas poligonales: \"*arrow*\", \"*turtle*\", "
"\"*circle*\", \"*square*\", \"*triangle*\", \"*classic*\". Para aprender "
"como trabajar con estas formas ver los métodos de Screen :func:"
"`register_shape`."

#: ../Doc/library/turtle.rst:1181
msgid "one of the strings \"auto\", \"user\", \"noresize\""
msgstr "una de las cadenas \"*auto*\", \"*user*\", \"*noresize*\""

#: ../Doc/library/turtle.rst:1183
msgid ""
"Set resizemode to one of the values: \"auto\", \"user\", \"noresize\".  If "
"*rmode* is not given, return current resizemode.  Different resizemodes have "
"the following effects:"
msgstr ""
"Establece *resizemode* a alguno de los valores: \"*auto*\", \"*user*\", "
"\"*noresize*\". SI *mode* no se aporta, devuelve el actual *resizemode*. "
"Distintos *resizemode* tienen los siguientes efectos:"

#: ../Doc/library/turtle.rst:1187
msgid ""
"\"auto\": adapts the appearance of the turtle corresponding to the value of "
"pensize."
msgstr ""
"\"*auto*\": adapta la apariencia de la tortuga al correspondiente valor del "
"lápiz."

#: ../Doc/library/turtle.rst:1188
msgid ""
"\"user\": adapts the appearance of the turtle according to the values of "
"stretchfactor and outlinewidth (outline), which are set by :func:`shapesize`."
msgstr ""
"\"*user*\": adapta la apariencia de la tortuga de acuerdo a los valores de "
"*sretchfactor* y *outlinewidth* (contorno), que se establece con la función :"
"func:`shapesize`."

#: ../Doc/library/turtle.rst:1191
msgid "\"noresize\": no adaption of the turtle's appearance takes place."
msgstr "\"*noresize*\": no se adapta la apariencia de la tortuga."

#: ../Doc/library/turtle.rst:1193
msgid ""
"resizemode(\"user\") is called by :func:`shapesize` when used with arguments."
msgstr ""
"*resizemode(\"user\")* es llamado por la función :func:`shapesize` cuando se "
"usa con argumentos."

#: ../Doc/library/turtle.rst:1208 ../Doc/library/turtle.rst:1209
#: ../Doc/library/turtle.rst:1210
msgid "positive number"
msgstr "número positivo"

#: ../Doc/library/turtle.rst:1212
msgid ""
"Return or set the pen's attributes x/y-stretchfactors and/or outline.  Set "
"resizemode to \"user\".  If and only if resizemode is set to \"user\", the "
"turtle will be displayed stretched according to its stretchfactors: "
"*stretch_wid* is stretchfactor perpendicular to its orientation, "
"*stretch_len* is stretchfactor in direction of its orientation, *outline* "
"determines the width of the shapes's outline."
msgstr ""
"Devuelve o establece los atributos del lápiz los factores x/y de "
"estiramiento y contorno. Establece *resizemode* a *\"user\"* si y solo si "
"*resizemode* está definido como *\"user\"*, la tortuga será verá estirada "
"acorde a sus factores de estiramiento: *stretch_wid* es el factor de "
"estiramiento perpendicular a su orientación, *stretch_len* es su factor de "
"estiramiento en dirección a su orientación, *outline* determina el grosor de "
"contorno de la forma."

#: ../Doc/library/turtle.rst:1235 ../Doc/library/turtle.rst:1887
#: ../Doc/library/turtle.rst:1888 ../Doc/library/turtle.rst:1889
msgid "number (optional)"
msgstr "número (opcional)"

# shearfacto se refiere a una inclinación y estiramiento, gira y estira la figura por un factor. No se si hay alguna palabra mejor que inclinar o estirar.
#: ../Doc/library/turtle.rst:1237
msgid ""
"Set or return the current shearfactor. Shear the turtleshape according to "
"the given shearfactor shear, which is the tangent of the shear angle. Do "
"*not* change the turtle's heading (direction of movement). If shear is not "
"given: return the current shearfactor, i. e. the tangent of the shear angle, "
"by which lines parallel to the heading of the turtle are sheared."
msgstr ""
"Establece o devuelve el valor actual del estiramiento. Estira la forma de la "
"tortuga de acuerdo a la inclinación del factor de corte, que es la tangente "
"del ángulo de corte. No cambia el rumbo de la tortuga (dirección del "
"movimiento). Si no de da un valor de inclinación: devuelve el factor actual, "
"por ejemplo la tangente del ángulo de inclinación, por el cual se cortan la "
"líneas paralelas al rumbo de la tortuga."

#: ../Doc/library/turtle.rst:1258
msgid ""
"Rotate the turtleshape by *angle* from its current tilt-angle, but do *not* "
"change the turtle's heading (direction of movement)."
msgstr ""
"Rota la forma de la tortuga en *ángulo* desde su ángulo de inclinación "
"actual, pero no cambia el rumbo de la tortuga (dirección del movimiento)."

#: ../Doc/library/turtle.rst:1277
msgid ""
"Rotate the turtleshape to point in the direction specified by *angle*, "
"regardless of its current tilt-angle.  *Do not* change the turtle's heading "
"(direction of movement)."
msgstr ""
"Rota la forma de la tortuga apuntando en la dirección especificada por el "
"*ángulo*, independientemente de su ángulo de dirección actual. No cambia el "
"rumbo de la tortuga (dirección de movimiento)."

#: ../Doc/library/turtle.rst:1297 ../Doc/library/turtle.rst:1320
#: ../Doc/library/turtle.rst:1321 ../Doc/library/turtle.rst:1322
#: ../Doc/library/turtle.rst:1323
msgid "a number (optional)"
msgstr "un número (opcional)"

#: ../Doc/library/turtle.rst:1299
msgid ""
"Set or return the current tilt-angle. If angle is given, rotate the "
"turtleshape to point in the direction specified by angle, regardless of its "
"current tilt-angle. Do *not* change the turtle's heading (direction of "
"movement). If angle is not given: return the current tilt-angle, i. e. the "
"angle between the orientation of the turtleshape and the heading of the "
"turtle (its direction of movement)."
msgstr ""
"Establece o devuelve el ángulo de inclinación actual. Si se otorga un "
"ángulo, rota la forma de la tortuga para apuntar en la dirección del ángulo "
"especificado, independientemente de su actual ángulo de inclinación. No "
"cambia el rumbo de la tortuga (dirección del movimiento). Si no se da el "
"ángulo: devuelve el ángulo de inclinación actual, por ejemplo: el ángulo "
"entre la orientación de la forma de la tortuga y el rumbo de la tortuga (su "
"dirección de movimiento)."

#: ../Doc/library/turtle.rst:1325
msgid "Set or return the current transformation matrix of the turtle shape."
msgstr ""
"Establece o devuelve la matriz de transformación actual de la forma de la "
"tortuga."

#: ../Doc/library/turtle.rst:1327
msgid ""
"If none of the matrix elements are given, return the transformation matrix "
"as a tuple of 4 elements. Otherwise set the given elements and transform the "
"turtleshape according to the matrix consisting of first row t11, t12 and "
"second row t21, 22. The determinant t11 * t22 - t12 * t21 must not be zero, "
"otherwise an error is raised. Modify stretchfactor, shearfactor and "
"tiltangle according to the given matrix."
msgstr ""
"Si no se proporciona ninguno de los elementos de la matriz, devuelve la "
"matriz de transformación como una tupla de 4 elementos. De lo contrario, "
"establezca los elementos dados y transforme la forma de tortuga de acuerdo "
"con la matriz consistente en una primer columna *t11*, t12 y la segunda "
"columna t21, 22. El determinante t11 * t22 - t12 * t21 no debe ser cero, de "
"lo contrario se genera un error. Modificar el factor de estiramiento, factor "
"de corte y el ángulo de inclinación de acuerdo con la matriz dada."

#: ../Doc/library/turtle.rst:1349
msgid ""
"Return the current shape polygon as tuple of coordinate pairs. This can be "
"used to define a new shape or components of a compound shape."
msgstr ""
"Devuelve el polígono de la forma actual como tupla de pares de coordenadas. "
"Esto puede ser usado para definir una nueva forma o componentes de una forma "
"compuesta."

#: ../Doc/library/turtle.rst:1366 ../Doc/library/turtle.rst:1388
#: ../Doc/library/turtle.rst:1413 ../Doc/library/turtle.rst:1811
msgid ""
"a function with two arguments which will be called with the coordinates of "
"the clicked point on the canvas"
msgstr ""
"una función con dos argumentos que se invocará con las coordenadas del punto "
"en el que se hizo clic en el lienzo"

#: ../Doc/library/turtle.rst:1368 ../Doc/library/turtle.rst:1390
#: ../Doc/library/turtle.rst:1415 ../Doc/library/turtle.rst:1813
msgid "number of the mouse-button, defaults to 1 (left mouse button)"
msgstr ""
"número del botón del mouse, el valor predeterminado es 1 (botón izquierdo "
"del mouse)"

#: ../Doc/library/turtle.rst:1369 ../Doc/library/turtle.rst:1391
#: ../Doc/library/turtle.rst:1416 ../Doc/library/turtle.rst:1814
msgid ""
"``True`` or ``False`` -- if ``True``, a new binding will be added, otherwise "
"it will replace a former binding"
msgstr ""
"``True`` o ``False`` -- si ``True``, se agrega un nuevo enlace, de lo "
"contrario reemplazará el enlace anterior"

#: ../Doc/library/turtle.rst:1372
msgid ""
"Bind *fun* to mouse-click events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed.  Example for the anonymous turtle, i.e. the "
"procedural way:"
msgstr ""
"Enlaza *acciones divertidas* a eventos de click en la tortuga. Si la "
"*accion* es ``None``, las acciones asociadas son borradas. Ejemplo para la "
"tortuga anónima, en la forma procedimental:"

#: ../Doc/library/turtle.rst:1394
msgid ""
"Bind *fun* to mouse-button-release events on this turtle.  If *fun* is "
"``None``, existing bindings are removed."
msgstr ""
"Enlaza *acciones divertidas* a eventos del tipo soltar botón del mouse en la "
"tortuga. SI la *acción* es ``None``, las acciones asociadas son borradas."

#: ../Doc/library/turtle.rst:1419
msgid ""
"Bind *fun* to mouse-move events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"Enlaza *acciones divertidas* a eventos en los movimientos del mouse. Si la "
"*acción* es ``None``, las acciones asociadas son borradas."

#: ../Doc/library/turtle.rst:1422
msgid ""
"Remark: Every sequence of mouse-move-events on a turtle is preceded by a "
"mouse-click event on that turtle."
msgstr ""
"Observación: cada secuencia de los eventos de movimiento del mouse en una "
"tortuga es precedida por un evento de click del mouse en esa tortuga."

#: ../Doc/library/turtle.rst:1430
msgid ""
"Subsequently, clicking and dragging the Turtle will move it across the "
"screen thereby producing handdrawings (if pen is down)."
msgstr ""
"Subsecuentemente, clickear y arrastrar la Tortuga la moverá a través de la "
"pantalla produciendo dibujos a mano alzada (si el lápiz está abajo)."

#: ../Doc/library/turtle.rst:1439
msgid ""
"Start recording the vertices of a polygon.  Current turtle position is first "
"vertex of polygon."
msgstr ""
"Comienza a grabar los vértices de un polígono. La posición actual de la "
"tortuga es el primer vértice del polígono."

#: ../Doc/library/turtle.rst:1445
msgid ""
"Stop recording the vertices of a polygon.  Current turtle position is last "
"vertex of polygon.  This will be connected with the first vertex."
msgstr ""
"Deja de grabar los vértices de un polígono. La posición actual de la tortuga "
"es el último vértice del polígono. Esto se conectará con el primer vértice."

#: ../Doc/library/turtle.rst:1451
msgid "Return the last recorded polygon."
msgstr "Devuelve el último polígono grabado."

#: ../Doc/library/turtle.rst:1470
msgid ""
"Create and return a clone of the turtle with same position, heading and "
"turtle properties."
msgstr ""
"Crea y devuelve un clon de la tortuga con la misma posición, dirección y "
"propiedades de la tortuga."

#: ../Doc/library/turtle.rst:1483
msgid ""
"Return the Turtle object itself.  Only reasonable use: as a function to "
"return the \"anonymous turtle\":"
msgstr ""
"Devuelve el objeto Tortuga en si. El único uso razonable: es como una "
"función para devolver la \"tortuga anónima\":"

# Return the TurtleScreen object the turtle is drawing on.
# no se si "sobre el cual" es la traducción adecuada.
#: ../Doc/library/turtle.rst:1497
msgid ""
"Return the :class:`TurtleScreen` object the turtle is drawing on. "
"TurtleScreen methods can then be called for that object."
msgstr ""
"Devuelve el objeto :class:`TurtleScreen` sobre el cual la tortuga está "
"dibujando. Los métodos *TurtleScreen* luego pueden ser llamados para ese "
"objeto."

#: ../Doc/library/turtle.rst:1511
msgid "an integer or ``None``"
msgstr "un entero o ``None``"

#: ../Doc/library/turtle.rst:1513
msgid ""
"Set or disable undobuffer.  If *size* is an integer an empty undobuffer of "
"given size is installed.  *size* gives the maximum number of turtle actions "
"that can be undone by the :func:`undo` method/function.  If *size* is "
"``None``, the undobuffer is disabled."
msgstr ""
"Establece o deshabilita el buffer para deshacer acciones. Si *size* es un "
"entero se instala un buffer para deshacer acciones del tamaño. *size* da el "
"máximo número de acciones que la tortuga puede deshacer con la función o "
"método  :func:`undo`. Si *size* es ``None``, se deshabilita el buffer para "
"deshacer acciones."

#: ../Doc/library/turtle.rst:1526
msgid "Return number of entries in the undobuffer."
msgstr "Devuelve el número de entradas en el buffer para deshacer acciones."

#: ../Doc/library/turtle.rst:1539
msgid "Compound shapes"
msgstr "Formas compuestas"

#: ../Doc/library/turtle.rst:1541
msgid ""
"To use compound turtle shapes, which consist of several polygons of "
"different color, you must use the helper class :class:`Shape` explicitly as "
"described below:"
msgstr ""
"Para usar formas complejas con la tortuga, que consiste en varios polígonos "
"de diferentes colores, deberá usar la clase de ayuda :class:`Shape` "
"explícitamente como se describe debajo:"

#: ../Doc/library/turtle.rst:1545
msgid "Create an empty Shape object of type \"compound\"."
msgstr "Crear una objeto de forma vacía del tupo *compound*."

#: ../Doc/library/turtle.rst:1546
msgid ""
"Add as many components to this object as desired, using the :meth:"
"`addcomponent` method."
msgstr ""
"Agregar todos los componentes deseados a este objeto, usando el método :meth:"
"`addcomponent`."

#: ../Doc/library/turtle.rst:1549
msgid "For example:"
msgstr "Por ejemplo:"

#: ../Doc/library/turtle.rst:1560
msgid "Now add the Shape to the Screen's shapelist and use it:"
msgstr "Ahora agregar la forma a la lista de formas de la pantalla y úsela:"

#: ../Doc/library/turtle.rst:1571
msgid ""
"The :class:`Shape` class is used internally by the :func:`register_shape` "
"method in different ways.  The application programmer has to deal with the "
"Shape class *only* when using compound shapes like shown above!"
msgstr ""
"La clase :class:`Shape` es usada internamente por el método :func:"
"`register_shape` en maneras diferentes. El programador deberá lidiar con la "
"clase *Shape* ¡solo cuando use formas compuestas como las que se mostraron "
"arriba!"

#: ../Doc/library/turtle.rst:1577
msgid "Methods of TurtleScreen/Screen and corresponding functions"
msgstr "Métodos de *TurtleScreen/Screen* y sus correspondientes funciones"

#: ../Doc/library/turtle.rst:1579
msgid ""
"Most of the examples in this section refer to a TurtleScreen instance called "
"``screen``."
msgstr ""
"La mayoría de los ejemplos en esta sección se refieren a la instancia de "
"*TurtleScreen* llamada ``screen``."

#: ../Doc/library/turtle.rst:1593
msgid ""
"a color string or three numbers in the range 0..colormode or a 3-tuple of "
"such numbers"
msgstr ""
"una cadena de color o tres números en el rango 0..*colormode* o una tupla de "
"3 de esos números"

#: ../Doc/library/turtle.rst:1597
msgid "Set or return background color of the TurtleScreen."
msgstr "Establece o devuelve el color de fondo de *TurtleScreen*."

#: ../Doc/library/turtle.rst:1612
msgid "a string, name of a gif-file or ``\"nopic\"``, or ``None``"
msgstr "una cadena, nombre o archivo gif o ``\"nopic\"``, o ``None``"

#: ../Doc/library/turtle.rst:1614
msgid ""
"Set background image or return name of current backgroundimage.  If "
"*picname* is a filename, set the corresponding image as background.  If "
"*picname* is ``\"nopic\"``, delete background image, if present.  If "
"*picname* is ``None``, return the filename of the current backgroundimage. ::"
msgstr ""
"Establece la imagen de fondo o devuelve el nombre de la imagen de fondo "
"actual. Si *picname* es un nombre de archivo, establece la imagen "
"correspondiente como fondo. Si *picname* es ``\"nopic\"``, borra la imagen "
"de fondo, si hay alguna presente. Si *picname* es ``None``, devuelve el "
"nombre de archivo de la imagen de fondo actual. ::"

#: ../Doc/library/turtle.rst:1629
msgid ""
"Delete all drawings and all turtles from the TurtleScreen.  Reset the now "
"empty TurtleScreen to its initial state: white background, no background "
"image, no event bindings and tracing on."
msgstr ""
"Borra todos los dibujos y todas las tortugas del la pantalla de la tortuga. "
"Reinicia la ahora vacía pantalla de la tortuga a su estado inicial: fondo "
"blanco, sin imagen de fondo, sin enlaces a eventos o seguimientos."

#: ../Doc/library/turtle.rst:1634
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``clearscreen``.  The global function ``clear`` is a different one "
"derived from the Turtle method ``clear``."
msgstr ""
"Este método de *TurtleScreen* está disponible como una función global solo "
"bajo el nombre `clearscreen``. La función global ``clear`` es otra, derivada "
"del método de *Turtle* ``clear``."

#: ../Doc/library/turtle.rst:1642
msgid "Reset all Turtles on the Screen to their initial state."
msgstr "Reinicia todas las tortugas de la pantalla a su estado inicial."

#: ../Doc/library/turtle.rst:1645
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``resetscreen``.  The global function ``reset`` is another one derived "
"from the Turtle method ``reset``."
msgstr ""
"Este método *TurtleScreen* esta disponible como una función global solo bajo "
"el nombre ``resetscreen``. La función global ``reset`` es otra, derivada del "
"método *Turtle* ``reset``."

#: ../Doc/library/turtle.rst:1652
msgid "positive integer, new width of canvas in pixels"
msgstr "entero positivo, nueva anchura del lienzo en pixeles"

#: ../Doc/library/turtle.rst:1653
msgid "positive integer, new height of canvas in pixels"
msgstr "entero positivo, nueva altura del lienzo en pixeles"

#: ../Doc/library/turtle.rst:1654
msgid "colorstring or color-tuple, new background color"
msgstr "*colorstrng* o tupla de color, muevo color de fondo"

#: ../Doc/library/turtle.rst:1656
msgid ""
"If no arguments are given, return current (canvaswidth, canvasheight).  Else "
"resize the canvas the turtles are drawing on.  Do not alter the drawing "
"window.  To observe hidden parts of the canvas, use the scrollbars. With "
"this method, one can make visible those parts of a drawing which were "
"outside the canvas before."
msgstr ""
"Si no se dan argumentos, devuelve el actual (ancho y alto del lienzo). Sino "
"redimensiona el lienzo en el que la tortuga está dibujando. No altera la "
"ventana de dibujo. Para ver las partes ocultas del lienzo, use la barra de "
"desplazamiento. Con este método, se pueden hacer visibles aquellas partes de "
"un dibujo que antes estaban fuera del lienzo."

#: ../Doc/library/turtle.rst:1668
msgid "e.g. to search for an erroneously escaped turtle ;-)"
msgstr "p.ej. buscar una tortuga que se escapó por error ;-)"

#: ../Doc/library/turtle.rst:1673
msgid "a number, x-coordinate of lower left corner of canvas"
msgstr "un número, coordenada x de la esquina inferior izquierda del lienzo"

#: ../Doc/library/turtle.rst:1674
msgid "a number, y-coordinate of lower left corner of canvas"
msgstr "un número, coordenada y de la esquina inferior izquierda del lienzo"

#: ../Doc/library/turtle.rst:1675
msgid "a number, x-coordinate of upper right corner of canvas"
msgstr "un número, coordenada x de la esquina superior derecha del lienzo"

#: ../Doc/library/turtle.rst:1676
msgid "a number, y-coordinate of upper right corner of canvas"
msgstr "un número, coordenada z de la esquina superior derecha del lienzo"

#: ../Doc/library/turtle.rst:1678
msgid ""
"Set up user-defined coordinate system and switch to mode \"world\" if "
"necessary.  This performs a ``screen.reset()``.  If mode \"world\" is "
"already active, all drawings are redrawn according to the new coordinates."
msgstr ""
"Configura coordenadas definidas por el usuario y cambia al modo *world* si "
"es necesario. Esto realiza un ``screen.reset()``. Si el modo *world* ya está "
"activo, todos los dibujos se re dibujan de acuerdo a las nuevas coordenadas."

#: ../Doc/library/turtle.rst:1682
msgid ""
"**ATTENTION**: in user-defined coordinate systems angles may appear "
"distorted."
msgstr ""
"**ATENCIÓN**: en los sistemas de coordenadas definidos por el usuario, los "
"ángulos pueden aparecer distorsionados."

#: ../Doc/library/turtle.rst:1710
msgid "positive integer"
msgstr "entero positivo"

#: ../Doc/library/turtle.rst:1712
msgid ""
"Set or return the drawing *delay* in milliseconds.  (This is approximately "
"the time interval between two consecutive canvas updates.)  The longer the "
"drawing delay, the slower the animation."
msgstr ""
"Establece o devuelve el *retraso* del dibujo en mili segundos. ( Este es "
"aproximadamente, el tiempo de intervalo entre dos actualizaciones "
"consecutivas del lienzo). Mientras más largo sea el retraso, más lenta la "
"animación."

#: ../Doc/library/turtle.rst:1716
msgid "Optional argument:"
msgstr "Argumento opcional:"

#: ../Doc/library/turtle.rst:1730 ../Doc/library/turtle.rst:1731
msgid "nonnegative integer"
msgstr "entero no negativo"

# n-th lo enconté como enésima, pero no se si se entiende la frase
#: ../Doc/library/turtle.rst:1733
#, fuzzy
msgid ""
"Turn turtle animation on/off and set delay for update drawings.  If *n* is "
"given, only each n-th regular screen update is really performed.  (Can be "
"used to accelerate the drawing of complex graphics.)  When called without "
"arguments, returns the currently stored value of n. Second argument sets "
"delay value (see :func:`delay`)."
msgstr ""
"Activa o desactiva la animación de la tortuga y establece el retraso para la "
"actualización de los dibujos. Si se da *n*, solo cada enésima actualización "
"regular de pantalla se realiza realmente. (Puede usarse para acelerar los "
"dibujos de gráficos complejos). Cuando es llamada sin argumentos, devuelve "
"el valor de *n* guardado actualmente. El segundo argumento establece el "
"valor de retraso (ver :func:`delay`)."

#: ../Doc/library/turtle.rst:1753
msgid "Perform a TurtleScreen update. To be used when tracer is turned off."
msgstr ""
"Realiza una actualización de la pantalla de la tortuga. Para ser usada "
"cuando *tracer* está deshabilitada."

#: ../Doc/library/turtle.rst:1755
msgid "See also the RawTurtle/Turtle method :func:`speed`."
msgstr "Ver también el método *RawTurtle/Turtle* `speed`."

#: ../Doc/library/turtle.rst:1763
msgid ""
"Set focus on TurtleScreen (in order to collect key-events).  Dummy arguments "
"are provided in order to be able to pass :func:`listen` to the onclick "
"method."
msgstr ""
"Establece el foco en la pantalla de la tortuga (para recoger eventos de "
"teclado). Los argumentos *dummy* se proveen en orden de ser capaces de "
"pasar :func:`listen` a los métodos *onclick*."

#: ../Doc/library/turtle.rst:1770 ../Doc/library/turtle.rst:1790
msgid "a function with no arguments or ``None``"
msgstr "una función sin argumentos o ``None``"

#: ../Doc/library/turtle.rst:1771 ../Doc/library/turtle.rst:1791
msgid "a string: key (e.g. \"a\") or key-symbol (e.g. \"space\")"
msgstr ""
"una palabra: tecla (p. ej. \"a\") o una acción del teclado (p. ej. \"space\")"

#: ../Doc/library/turtle.rst:1773
msgid ""
"Bind *fun* to key-release event of key.  If *fun* is ``None``, event "
"bindings are removed. Remark: in order to be able to register key-events, "
"TurtleScreen must have the focus. (See method :func:`listen`.)"
msgstr ""
"Vincula *fun* a un evento de liberación de una tecla. Si *fun* es ``None``, "
"los eventos vinculados son removidos. Aclaración: para poder registrar "
"eventos de teclado, *TurtleScreen* tiene que tener el foco. (ver el método :"
"func:`listen`.)"

#: ../Doc/library/turtle.rst:1793
msgid ""
"Bind *fun* to key-press event of key if key is given, or to any key-press-"
"event if no key is given. Remark: in order to be able to register key-"
"events, TurtleScreen must have focus. (See method :func:`listen`.)"
msgstr ""
"Vincula *fun* a un evento de pulsado de una tecla, o a cualquier evento de "
"pulsado de tecla si no se da una. Aclaración: para poder registrar eventos "
"de teclado, *TurtleScreen* tiene que tener el foco. (ver el método :func:"
"`listen`.)"

#: ../Doc/library/turtle.rst:1817
msgid ""
"Bind *fun* to mouse-click events on this screen.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"vincula *fun* a eventos de click del mouse en esta pantalla. Si *fun* es "
"``None``, los vínculos existentes son removidos."

#: ../Doc/library/turtle.rst:1820
msgid ""
"Example for a TurtleScreen instance named ``screen`` and a Turtle instance "
"named turtle:"
msgstr ""
"Ejemplo de una instancia *TurtleScreen* llamada ``screen`` y una instancia "
"*Turtle* llamada *turtle*:"

#: ../Doc/library/turtle.rst:1831
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``onscreenclick``.  The global function ``onclick`` is another one "
"derived from the Turtle method ``onclick``."
msgstr ""
"Este método *TurtleScreen* está disponible como una función global solo bajo "
"el nombre `onscreenclick``. La función global ``onclick`` es otra derivada "
"del método *Turtle* ``onclick``."

#: ../Doc/library/turtle.rst:1838
msgid "a function with no arguments"
msgstr ""

#: ../Doc/library/turtle.rst:1839
msgid "a number >= 0"
msgstr ""

#: ../Doc/library/turtle.rst:1841
msgid "Install a timer that calls *fun* after *t* milliseconds."
msgstr ""

#: ../Doc/library/turtle.rst:1859
msgid ""
"Starts event loop - calling Tkinter's mainloop function. Must be the last "
"statement in a turtle graphics program. Must *not* be used if a script is "
"run from within IDLE in -n mode (No subprocess) - for interactive use of "
"turtle graphics. ::"
msgstr ""

#: ../Doc/library/turtle.rst:1872 ../Doc/library/turtle.rst:1873
#: ../Doc/library/turtle.rst:1885 ../Doc/library/turtle.rst:1886
msgid "string"
msgstr ""

#: ../Doc/library/turtle.rst:1875
msgid ""
"Pop up a dialog window for input of a string. Parameter title is the title "
"of the dialog window, prompt is a text mostly describing what information to "
"input. Return the string input. If the dialog is canceled, return "
"``None``. ::"
msgstr ""

#: ../Doc/library/turtle.rst:1891
msgid ""
"Pop up a dialog window for input of a number. title is the title of the "
"dialog window, prompt is a text mostly describing what numerical information "
"to input. default: default value, minval: minimum value for input, maxval: "
"maximum value for input The number input must be in the range minval .. "
"maxval if these are given. If not, a hint is issued and the dialog remains "
"open for correction. Return the number input. If the dialog is canceled,  "
"return ``None``. ::"
msgstr ""

#: ../Doc/library/turtle.rst:1908
msgid "one of the strings \"standard\", \"logo\" or \"world\""
msgstr ""

#: ../Doc/library/turtle.rst:1910
msgid ""
"Set turtle mode (\"standard\", \"logo\" or \"world\") and perform reset.  If "
"mode is not given, current mode is returned."
msgstr ""

#: ../Doc/library/turtle.rst:1913
msgid ""
"Mode \"standard\" is compatible with old :mod:`turtle`.  Mode \"logo\" is "
"compatible with most Logo turtle graphics.  Mode \"world\" uses user-defined "
"\"world coordinates\". **Attention**: in this mode angles appear distorted "
"if ``x/y`` unit-ratio doesn't equal 1."
msgstr ""

#: ../Doc/library/turtle.rst:1919
msgid "Mode"
msgstr ""

#: ../Doc/library/turtle.rst:1919
msgid "Initial turtle heading"
msgstr ""

#: ../Doc/library/turtle.rst:1919
msgid "positive angles"
msgstr ""

#: ../Doc/library/turtle.rst:1921
msgid "\"standard\""
msgstr ""

#: ../Doc/library/turtle.rst:1921
msgid "to the right (east)"
msgstr ""

#: ../Doc/library/turtle.rst:1921
msgid "counterclockwise"
msgstr ""

#: ../Doc/library/turtle.rst:1922
msgid "\"logo\""
msgstr ""

#: ../Doc/library/turtle.rst:1922
msgid "upward    (north)"
msgstr ""

#: ../Doc/library/turtle.rst:1922
msgid "clockwise"
msgstr ""

#: ../Doc/library/turtle.rst:1935
msgid "one of the values 1.0 or 255"
msgstr ""

#: ../Doc/library/turtle.rst:1937
msgid ""
"Return the colormode or set it to 1.0 or 255.  Subsequently *r*, *g*, *b* "
"values of color triples have to be in the range 0..\\ *cmode*."
msgstr ""

#: ../Doc/library/turtle.rst:1958
msgid ""
"Return the Canvas of this TurtleScreen.  Useful for insiders who know what "
"to do with a Tkinter Canvas."
msgstr ""

#: ../Doc/library/turtle.rst:1971
msgid "Return a list of names of all currently available turtle shapes."
msgstr ""

#: ../Doc/library/turtle.rst:1983
msgid "There are three different ways to call this function:"
msgstr ""

#: ../Doc/library/turtle.rst:1985
msgid ""
"*name* is the name of a gif-file and *shape* is ``None``: Install the "
"corresponding image shape. ::"
msgstr ""

#: ../Doc/library/turtle.rst:1991
msgid ""
"Image shapes *do not* rotate when turning the turtle, so they do not display "
"the heading of the turtle!"
msgstr ""

#: ../Doc/library/turtle.rst:1994
msgid ""
"*name* is an arbitrary string and *shape* is a tuple of pairs of "
"coordinates: Install the corresponding polygon shape."
msgstr ""

#: ../Doc/library/turtle.rst:2002
msgid ""
"*name* is an arbitrary string and shape is a (compound) :class:`Shape` "
"object: Install the corresponding compound shape."
msgstr ""

#: ../Doc/library/turtle.rst:2005
msgid ""
"Add a turtle shape to TurtleScreen's shapelist.  Only thusly registered "
"shapes can be used by issuing the command ``shape(shapename)``."
msgstr ""

#: ../Doc/library/turtle.rst:2011
msgid "Return the list of turtles on the screen."
msgstr ""

#: ../Doc/library/turtle.rst:2022
msgid "Return the height of the turtle window. ::"
msgstr ""

#: ../Doc/library/turtle.rst:2030
msgid "Return the width of the turtle window. ::"
msgstr ""

#: ../Doc/library/turtle.rst:2039
msgid "Methods specific to Screen, not inherited from TurtleScreen"
msgstr ""

#: ../Doc/library/turtle.rst:2043
msgid "Shut the turtlegraphics window."
msgstr ""

#: ../Doc/library/turtle.rst:2048
msgid "Bind bye() method to mouse clicks on the Screen."
msgstr ""

#: ../Doc/library/turtle.rst:2051
msgid ""
"If the value \"using_IDLE\" in the configuration dictionary is ``False`` "
"(default value), also enter mainloop.  Remark: If IDLE with the ``-n`` "
"switch (no subprocess) is used, this value should be set to ``True`` in :"
"file:`turtle.cfg`.  In this case IDLE's own mainloop is active also for the "
"client script."
msgstr ""

#: ../Doc/library/turtle.rst:2060
msgid ""
"Set the size and position of the main window.  Default values of arguments "
"are stored in the configuration dictionary and can be changed via a :file:"
"`turtle.cfg` file."
msgstr ""

#: ../Doc/library/turtle.rst:2064
#, python-format
msgid ""
"if an integer, a size in pixels, if a float, a fraction of the screen; "
"default is 50% of screen"
msgstr ""

#: ../Doc/library/turtle.rst:2066
#, python-format
msgid ""
"if an integer, the height in pixels, if a float, a fraction of the screen; "
"default is 75% of screen"
msgstr ""

#: ../Doc/library/turtle.rst:2068
msgid ""
"if positive, starting position in pixels from the left edge of the screen, "
"if negative from the right edge, if ``None``, center window horizontally"
msgstr ""

#: ../Doc/library/turtle.rst:2071
msgid ""
"if positive, starting position in pixels from the top edge of the screen, if "
"negative from the bottom edge, if ``None``, center window vertically"
msgstr ""

#: ../Doc/library/turtle.rst:2086
msgid "a string that is shown in the titlebar of the turtle graphics window"
msgstr ""

#: ../Doc/library/turtle.rst:2089
msgid "Set title of turtle window to *titlestring*."
msgstr ""

#: ../Doc/library/turtle.rst:2098
msgid "Public classes"
msgstr ""

#: ../Doc/library/turtle.rst:2104
msgid ""
"a :class:`tkinter.Canvas`, a :class:`ScrolledCanvas` or a :class:"
"`TurtleScreen`"
msgstr ""

#: ../Doc/library/turtle.rst:2107
msgid ""
"Create a turtle.  The turtle has all methods described above as \"methods of "
"Turtle/RawTurtle\"."
msgstr ""

#: ../Doc/library/turtle.rst:2113
msgid ""
"Subclass of RawTurtle, has the same interface but draws on a default :class:"
"`Screen` object created automatically when needed for the first time."
msgstr ""

#: ../Doc/library/turtle.rst:2119
msgid "a :class:`tkinter.Canvas`"
msgstr ""

#: ../Doc/library/turtle.rst:2121
msgid ""
"Provides screen oriented methods like :func:`setbg` etc. that are described "
"above."
msgstr ""

#: ../Doc/library/turtle.rst:2126
msgid ""
"Subclass of TurtleScreen, with :ref:`four methods added <screenspecific>`."
msgstr ""

#: ../Doc/library/turtle.rst:2131
msgid ""
"some Tkinter widget to contain the ScrolledCanvas, i.e. a Tkinter-canvas "
"with scrollbars added"
msgstr ""

#: ../Doc/library/turtle.rst:2134
msgid ""
"Used by class Screen, which thus automatically provides a ScrolledCanvas as "
"playground for the turtles."
msgstr ""

#: ../Doc/library/turtle.rst:2139
msgid "one of the strings \"polygon\", \"image\", \"compound\""
msgstr ""

#: ../Doc/library/turtle.rst:2141
msgid ""
"Data structure modeling shapes.  The pair ``(type_, data)`` must follow this "
"specification:"
msgstr ""

#: ../Doc/library/turtle.rst:2146
msgid "*type_*"
msgstr ""

#: ../Doc/library/turtle.rst:2146
msgid "*data*"
msgstr ""

#: ../Doc/library/turtle.rst:2148
msgid "\"polygon\""
msgstr ""

#: ../Doc/library/turtle.rst:2148
msgid "a polygon-tuple, i.e. a tuple of pairs of coordinates"
msgstr ""

#: ../Doc/library/turtle.rst:2149
msgid "\"image\""
msgstr ""

#: ../Doc/library/turtle.rst:2149
msgid "an image  (in this form only used internally!)"
msgstr ""

#: ../Doc/library/turtle.rst:2150
msgid "\"compound\""
msgstr ""

#: ../Doc/library/turtle.rst:2150
msgid ""
"``None`` (a compound shape has to be constructed using the :meth:"
"`addcomponent` method)"
msgstr ""

#: ../Doc/library/turtle.rst:2156
msgid "a polygon, i.e. a tuple of pairs of numbers"
msgstr ""

#: ../Doc/library/turtle.rst:2157
msgid "a color the *poly* will be filled with"
msgstr ""

#: ../Doc/library/turtle.rst:2158
msgid "a color for the poly's outline (if given)"
msgstr ""

#: ../Doc/library/turtle.rst:2160
msgid "Example:"
msgstr ""

#: ../Doc/library/turtle.rst:2170
msgid "See :ref:`compoundshapes`."
msgstr ""

#: ../Doc/library/turtle.rst:2175
msgid ""
"A two-dimensional vector class, used as a helper class for implementing "
"turtle graphics.  May be useful for turtle graphics programs too.  Derived "
"from tuple, so a vector is a tuple!"
msgstr ""

#: ../Doc/library/turtle.rst:2179
msgid "Provides (for *a*, *b* vectors, *k* number):"
msgstr ""

#: ../Doc/library/turtle.rst:2181
msgid "``a + b`` vector addition"
msgstr ""

#: ../Doc/library/turtle.rst:2182
msgid "``a - b`` vector subtraction"
msgstr ""

#: ../Doc/library/turtle.rst:2183
msgid "``a * b`` inner product"
msgstr ""

#: ../Doc/library/turtle.rst:2184
msgid "``k * a`` and ``a * k`` multiplication with scalar"
msgstr ""

#: ../Doc/library/turtle.rst:2185
msgid "``abs(a)`` absolute value of a"
msgstr ""

#: ../Doc/library/turtle.rst:2186
msgid "``a.rotate(angle)`` rotation"
msgstr ""

#: ../Doc/library/turtle.rst:2190
msgid "Help and configuration"
msgstr ""

#: ../Doc/library/turtle.rst:2193
msgid "How to use help"
msgstr ""

#: ../Doc/library/turtle.rst:2195
msgid ""
"The public methods of the Screen and Turtle classes are documented "
"extensively via docstrings.  So these can be used as online-help via the "
"Python help facilities:"
msgstr ""

#: ../Doc/library/turtle.rst:2199
msgid ""
"When using IDLE, tooltips show the signatures and first lines of the "
"docstrings of typed in function-/method calls."
msgstr ""

#: ../Doc/library/turtle.rst:2202
msgid "Calling :func:`help` on methods or functions displays the docstrings::"
msgstr ""

#: ../Doc/library/turtle.rst:2233
msgid ""
"The docstrings of the functions which are derived from methods have a "
"modified form::"
msgstr ""

#: ../Doc/library/turtle.rst:2267
msgid ""
"These modified docstrings are created automatically together with the "
"function definitions that are derived from the methods at import time."
msgstr ""

#: ../Doc/library/turtle.rst:2272
msgid "Translation of docstrings into different languages"
msgstr ""

#: ../Doc/library/turtle.rst:2274
msgid ""
"There is a utility to create a dictionary the keys of which are the method "
"names and the values of which are the docstrings of the public methods of "
"the classes Screen and Turtle."
msgstr ""

#: ../Doc/library/turtle.rst:2280
msgid "a string, used as filename"
msgstr ""

#: ../Doc/library/turtle.rst:2282
msgid ""
"Create and write docstring-dictionary to a Python script with the given "
"filename.  This function has to be called explicitly (it is not used by the "
"turtle graphics classes).  The docstring dictionary will be written to the "
"Python script :file:`{filename}.py`.  It is intended to serve as a template "
"for translation of the docstrings into different languages."
msgstr ""

#: ../Doc/library/turtle.rst:2288
msgid ""
"If you (or your students) want to use :mod:`turtle` with online help in your "
"native language, you have to translate the docstrings and save the resulting "
"file as e.g. :file:`turtle_docstringdict_german.py`."
msgstr ""

#: ../Doc/library/turtle.rst:2292
msgid ""
"If you have an appropriate entry in your :file:`turtle.cfg` file this "
"dictionary will be read in at import time and will replace the original "
"English docstrings."
msgstr ""

#: ../Doc/library/turtle.rst:2295
msgid ""
"At the time of this writing there are docstring dictionaries in German and "
"in Italian.  (Requests please to glingl@aon.at.)"
msgstr ""

#: ../Doc/library/turtle.rst:2301
msgid "How to configure Screen and Turtles"
msgstr ""

#: ../Doc/library/turtle.rst:2303
msgid ""
"The built-in default configuration mimics the appearance and behaviour of "
"the old turtle module in order to retain best possible compatibility with it."
msgstr ""

#: ../Doc/library/turtle.rst:2306
msgid ""
"If you want to use a different configuration which better reflects the "
"features of this module or which better fits to your needs, e.g. for use in "
"a classroom, you can prepare a configuration file ``turtle.cfg`` which will "
"be read at import time and modify the configuration according to its "
"settings."
msgstr ""

#: ../Doc/library/turtle.rst:2311
msgid ""
"The built in configuration would correspond to the following turtle.cfg::"
msgstr ""

#: ../Doc/library/turtle.rst:2334
msgid "Short explanation of selected entries:"
msgstr ""

#: ../Doc/library/turtle.rst:2336
msgid ""
"The first four lines correspond to the arguments of the :meth:`Screen.setup` "
"method."
msgstr ""

#: ../Doc/library/turtle.rst:2338
msgid ""
"Line 5 and 6 correspond to the arguments of the method :meth:`Screen."
"screensize`."
msgstr ""

#: ../Doc/library/turtle.rst:2340
msgid ""
"*shape* can be any of the built-in shapes, e.g: arrow, turtle, etc.  For "
"more info try ``help(shape)``."
msgstr ""

#: ../Doc/library/turtle.rst:2342
msgid ""
"If you want to use no fillcolor (i.e. make the turtle transparent), you have "
"to write ``fillcolor = \"\"`` (but all nonempty strings must not have quotes "
"in the cfg-file)."
msgstr ""

#: ../Doc/library/turtle.rst:2345
msgid ""
"If you want to reflect the turtle its state, you have to use ``resizemode = "
"auto``."
msgstr ""

#: ../Doc/library/turtle.rst:2347
msgid ""
"If you set e.g. ``language = italian`` the docstringdict :file:"
"`turtle_docstringdict_italian.py` will be loaded at import time (if present "
"on the import path, e.g. in the same directory as :mod:`turtle`."
msgstr ""

#: ../Doc/library/turtle.rst:2350
msgid ""
"The entries *exampleturtle* and *examplescreen* define the names of these "
"objects as they occur in the docstrings.  The transformation of method-"
"docstrings to function-docstrings will delete these names from the "
"docstrings."
msgstr ""

#: ../Doc/library/turtle.rst:2354
msgid ""
"*using_IDLE*: Set this to ``True`` if you regularly work with IDLE and its -"
"n switch (\"no subprocess\").  This will prevent :func:`exitonclick` to "
"enter the mainloop."
msgstr ""

#: ../Doc/library/turtle.rst:2358
msgid ""
"There can be a :file:`turtle.cfg` file in the directory where :mod:`turtle` "
"is stored and an additional one in the current working directory.  The "
"latter will override the settings of the first one."
msgstr ""

#: ../Doc/library/turtle.rst:2362
msgid ""
"The :file:`Lib/turtledemo` directory contains a :file:`turtle.cfg` file.  "
"You can study it as an example and see its effects when running the demos "
"(preferably not from within the demo-viewer)."
msgstr ""

#: ../Doc/library/turtle.rst:2368
msgid ":mod:`turtledemo` --- Demo scripts"
msgstr ""

#: ../Doc/library/turtle.rst:2373
msgid ""
"The :mod:`turtledemo` package includes a set of demo scripts.  These scripts "
"can be run and viewed using the supplied demo viewer as follows::"
msgstr ""

#: ../Doc/library/turtle.rst:2378
msgid ""
"Alternatively, you can run the demo scripts individually.  For example, ::"
msgstr ""

#: ../Doc/library/turtle.rst:2382
msgid "The :mod:`turtledemo` package directory contains:"
msgstr ""

#: ../Doc/library/turtle.rst:2384
msgid ""
"A demo viewer :file:`__main__.py` which can be used to view the sourcecode "
"of the scripts and run them at the same time."
msgstr ""

#: ../Doc/library/turtle.rst:2386
msgid ""
"Multiple scripts demonstrating different features of the :mod:`turtle` "
"module.  Examples can be accessed via the Examples menu.  They can also be "
"run standalone."
msgstr ""

#: ../Doc/library/turtle.rst:2389
msgid ""
"A :file:`turtle.cfg` file which serves as an example of how to write and use "
"such files."
msgstr ""

#: ../Doc/library/turtle.rst:2392
msgid "The demo scripts are:"
msgstr ""

#: ../Doc/library/turtle.rst:2397
msgid "Name"
msgstr ""

#: ../Doc/library/turtle.rst:2397
msgid "Description"
msgstr ""

#: ../Doc/library/turtle.rst:2397
msgid "Features"
msgstr ""

#: ../Doc/library/turtle.rst:2399
msgid "bytedesign"
msgstr ""

#: ../Doc/library/turtle.rst:2399
msgid "complex classical turtle graphics pattern"
msgstr ""

#: ../Doc/library/turtle.rst:2399
msgid ":func:`tracer`, delay, :func:`update`"
msgstr ""

#: ../Doc/library/turtle.rst:2402
msgid "chaos"
msgstr ""

#: ../Doc/library/turtle.rst:2402
msgid ""
"graphs Verhulst dynamics, shows that computer's computations can generate "
"results sometimes against the common sense expectations"
msgstr ""

#: ../Doc/library/turtle.rst:2402
msgid "world coordinates"
msgstr ""

#: ../Doc/library/turtle.rst:2408
msgid "clock"
msgstr ""

#: ../Doc/library/turtle.rst:2408
msgid "analog clock showing time of your computer"
msgstr ""

#: ../Doc/library/turtle.rst:2408
msgid "turtles as clock's hands, ontimer"
msgstr ""

#: ../Doc/library/turtle.rst:2411
msgid "colormixer"
msgstr ""

#: ../Doc/library/turtle.rst:2411
msgid "experiment with r, g, b"
msgstr ""

#: ../Doc/library/turtle.rst:2413
msgid "forest"
msgstr ""

#: ../Doc/library/turtle.rst:2413
msgid "3 breadth-first trees"
msgstr ""

#: ../Doc/library/turtle.rst:2413
msgid "randomization"
msgstr ""

#: ../Doc/library/turtle.rst:2415
msgid "fractalcurves"
msgstr ""

#: ../Doc/library/turtle.rst:2415
msgid "Hilbert & Koch curves"
msgstr ""

#: ../Doc/library/turtle.rst:2415
msgid "recursion"
msgstr ""

#: ../Doc/library/turtle.rst:2417
msgid "lindenmayer"
msgstr ""

#: ../Doc/library/turtle.rst:2417
msgid "ethnomathematics (indian kolams)"
msgstr ""

#: ../Doc/library/turtle.rst:2417
msgid "L-System"
msgstr ""

#: ../Doc/library/turtle.rst:2420
msgid "minimal_hanoi"
msgstr ""

#: ../Doc/library/turtle.rst:2420
msgid "Towers of Hanoi"
msgstr ""

#: ../Doc/library/turtle.rst:2420
msgid "Rectangular Turtles as Hanoi discs (shape, shapesize)"
msgstr ""

#: ../Doc/library/turtle.rst:2424
msgid "nim"
msgstr ""

#: ../Doc/library/turtle.rst:2424
msgid ""
"play the classical nim game with three heaps of sticks against the computer."
msgstr ""

#: ../Doc/library/turtle.rst:2424
msgid "turtles as nimsticks, event driven (mouse, keyboard)"
msgstr ""

#: ../Doc/library/turtle.rst:2428
msgid "paint"
msgstr ""

#: ../Doc/library/turtle.rst:2428
msgid "super minimalistic drawing program"
msgstr ""

#: ../Doc/library/turtle.rst:2431
msgid "peace"
msgstr ""

#: ../Doc/library/turtle.rst:2431
msgid "elementary"
msgstr ""

#: ../Doc/library/turtle.rst:2431
msgid "turtle: appearance and animation"
msgstr ""

#: ../Doc/library/turtle.rst:2434
msgid "penrose"
msgstr ""

#: ../Doc/library/turtle.rst:2434
msgid "aperiodic tiling with kites and darts"
msgstr ""

#: ../Doc/library/turtle.rst:2437
msgid "planet_and_moon"
msgstr ""

#: ../Doc/library/turtle.rst:2437
msgid "simulation of gravitational system"
msgstr ""

#: ../Doc/library/turtle.rst:2437
msgid "compound shapes, :class:`Vec2D`"
msgstr ""

#: ../Doc/library/turtle.rst:2440
msgid "round_dance"
msgstr ""

#: ../Doc/library/turtle.rst:2440
msgid "dancing turtles rotating pairwise in opposite direction"
msgstr ""

#: ../Doc/library/turtle.rst:2440
msgid "compound shapes, clone shapesize, tilt, get_shapepoly, update"
msgstr ""

#: ../Doc/library/turtle.rst:2444
msgid "sorting_animate"
msgstr ""

#: ../Doc/library/turtle.rst:2444
msgid "visual demonstration of different sorting methods"
msgstr ""

#: ../Doc/library/turtle.rst:2444
msgid "simple alignment, randomization"
msgstr ""

#: ../Doc/library/turtle.rst:2447
msgid "tree"
msgstr ""

#: ../Doc/library/turtle.rst:2447
msgid "a (graphical) breadth first tree (using generators)"
msgstr ""

#: ../Doc/library/turtle.rst:2450
msgid "two_canvases"
msgstr ""

#: ../Doc/library/turtle.rst:2450
msgid "simple design"
msgstr ""

#: ../Doc/library/turtle.rst:2450
msgid "turtles on two canvases"
msgstr ""

#: ../Doc/library/turtle.rst:2453
msgid "wikipedia"
msgstr ""

#: ../Doc/library/turtle.rst:2453
msgid "a pattern from the wikipedia article on turtle graphics"
msgstr ""

#: ../Doc/library/turtle.rst:2453
msgid ":func:`clone`, :func:`undo`"
msgstr ""

#: ../Doc/library/turtle.rst:2456
msgid "yinyang"
msgstr ""

#: ../Doc/library/turtle.rst:2456
msgid "another elementary example"
msgstr ""

#: ../Doc/library/turtle.rst:2459
msgid "Have fun!"
msgstr ""

#: ../Doc/library/turtle.rst:2463
msgid "Changes since Python 2.6"
msgstr ""

#: ../Doc/library/turtle.rst:2465
msgid ""
"The methods :meth:`Turtle.tracer`, :meth:`Turtle.window_width` and :meth:"
"`Turtle.window_height` have been eliminated. Methods with these names and "
"functionality are now available only as methods of :class:`Screen`. The "
"functions derived from these remain available. (In fact already in Python "
"2.6 these methods were merely duplications of the corresponding :class:"
"`TurtleScreen`/:class:`Screen`-methods.)"
msgstr ""

#: ../Doc/library/turtle.rst:2473
msgid ""
"The method :meth:`Turtle.fill` has been eliminated. The behaviour of :meth:"
"`begin_fill` and :meth:`end_fill` have changed slightly: now  every filling-"
"process must be completed with an ``end_fill()`` call."
msgstr ""

#: ../Doc/library/turtle.rst:2478
msgid ""
"A method :meth:`Turtle.filling` has been added. It returns a boolean value: "
"``True`` if a filling process is under way, ``False`` otherwise. This "
"behaviour corresponds to a ``fill()`` call without arguments in Python 2.6."
msgstr ""

#: ../Doc/library/turtle.rst:2484
msgid "Changes since Python 3.0"
msgstr ""

#: ../Doc/library/turtle.rst:2486
msgid ""
"The methods :meth:`Turtle.shearfactor`, :meth:`Turtle.shapetransform` and :"
"meth:`Turtle.get_shapepoly` have been added. Thus the full range of regular "
"linear transforms is now available for transforming turtle shapes. :meth:"
"`Turtle.tiltangle` has been enhanced in functionality: it now can be used to "
"get or set the tiltangle. :meth:`Turtle.settiltangle` has been deprecated."
msgstr ""

#: ../Doc/library/turtle.rst:2493
msgid ""
"The method :meth:`Screen.onkeypress` has been added as a complement to :meth:"
"`Screen.onkey` which in fact binds actions to the keyrelease event. "
"Accordingly the latter has got an alias: :meth:`Screen.onkeyrelease`."
msgstr ""

#: ../Doc/library/turtle.rst:2497
msgid ""
"The method  :meth:`Screen.mainloop` has been added. So when working only "
"with Screen and Turtle objects one must not additionally import :func:"
"`mainloop` anymore."
msgstr ""

#: ../Doc/library/turtle.rst:2501
msgid ""
"Two input methods has been added :meth:`Screen.textinput` and :meth:`Screen."
"numinput`. These popup input dialogs and return strings and numbers "
"respectively."
msgstr ""

#: ../Doc/library/turtle.rst:2505
msgid ""
"Two example scripts :file:`tdemo_nim.py` and :file:`tdemo_round_dance.py` "
"have been added to the :file:`Lib/turtledemo` directory."
msgstr ""
